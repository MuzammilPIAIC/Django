# Generated by Django 4.0.2 on 2022-03-09 12:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=64)),
                ('deprecated', models.BooleanField(blank=True, null=True)),
                ('internal_type', models.CharField(blank=True, max_length=255, null=True)),
                ('internal_group', models.CharField(blank=True, max_length=255, null=True)),
                ('reconcile', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('root_id', models.IntegerField(blank=True, null=True)),
                ('is_off_balance', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('applicability', models.CharField(max_length=255)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('tax_negate', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=64)),
                ('reconcile', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('nocreate', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('include_initial_balance', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('internal_group', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccruedOrdersWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_accrued_orders_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticDefault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_stop', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_distribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('unit_amount', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=8, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('timesheet_invoice_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_so_line_edited', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('active_analytic_distribution', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAutomaticEntryWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('account_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_automatic_entry_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence_number', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('balance_start', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance_end_real', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('state', models.CharField(max_length=255)),
                ('total_entry_encoding', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance_end', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('difference', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('is_valid_balance_start', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementCashbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_cashbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementClosebalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_closebalance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_type', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_ref', models.CharField(max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual', models.FloatField(blank=True, null=True)),
                ('is_reconciled', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCashboxLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin_value', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_cashbox_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCashRounding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rounding', models.FloatField()),
                ('strategy', models.CharField(max_length=255)),
                ('rounding_method', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_cash_rounding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountChartTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code_digits', models.IntegerField()),
                ('visible', models.BooleanField(blank=True, null=True)),
                ('use_anglo_saxon', models.BooleanField(blank=True, null=True)),
                ('complete_tax_set', models.BooleanField(blank=True, null=True)),
                ('bank_account_code_prefix', models.CharField(max_length=255)),
                ('cash_account_code_prefix', models.CharField(max_length=255)),
                ('transfer_account_code_prefix', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_chart_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonJournalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('amount_currency', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_common_journal_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_common_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEdiDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('blocking_level', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_edi_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEdiFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_edi_format',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFinancialYearOp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_financial_year_op',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('auto_apply', models.BooleanField(blank=True, null=True)),
                ('vat_required', models.BooleanField(blank=True, null=True)),
                ('zip_from', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_to', models.CharField(blank=True, max_length=255, null=True)),
                ('foreign_vat', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionAccountTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_account_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTaxTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_tax_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('auto_apply', models.BooleanField(blank=True, null=True)),
                ('vat_required', models.BooleanField(blank=True, null=True)),
                ('zip_from', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_to', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFullReconcile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_full_reconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('code_prefix_start', models.CharField(blank=True, max_length=255, null=True)),
                ('code_prefix_end', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountGroupTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code_prefix_start', models.CharField(blank=True, max_length=255, null=True)),
                ('code_prefix_end', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_group_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountIncoterms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=3)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_incoterms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceSend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_email', models.BooleanField(blank=True, null=True)),
                ('is_print', models.BooleanField(blank=True, null=True)),
                ('printed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('snailmail_is_letter', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_invoice_send',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=5)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('restrict_mode_hash_table', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('invoice_reference_type', models.CharField(max_length=255)),
                ('invoice_reference_model', models.CharField(max_length=255)),
                ('refund_sequence', models.BooleanField(blank=True, null=True)),
                ('sequence_override_regex', models.TextField(blank=True, null=True)),
                ('bank_statements_source', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_activity_note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('show_on_dashboard', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_journal_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence_number', models.IntegerField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('narration', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('posted_before', models.BooleanField(blank=True, null=True)),
                ('move_type', models.CharField(max_length=255)),
                ('to_check', models.BooleanField(blank=True, null=True)),
                ('is_move_sent', models.BooleanField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_untaxed_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_tax_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total_in_currency_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('payment_state', models.CharField(blank=True, max_length=255, null=True)),
                ('always_tax_exigible', models.BooleanField(blank=True, null=True)),
                ('auto_post', models.BooleanField(blank=True, null=True)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('invoice_date_due', models.DateField(blank=True, null=True)),
                ('invoice_origin', models.CharField(blank=True, max_length=255, null=True)),
                ('qr_code_method', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_source_email', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_partner_display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('secure_sequence_number', models.IntegerField(blank=True, null=True)),
                ('inalterable_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('edi_state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'account_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_root_id', models.IntegerField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_unit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('debit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('reconciled', models.BooleanField(blank=True, null=True)),
                ('blocked', models.BooleanField(blank=True, null=True)),
                ('date_maturity', models.DateField(blank=True, null=True)),
                ('tax_base_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('tax_audit', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_tag_invert', models.BooleanField(blank=True, null=True)),
                ('amount_residual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('matching_number', models.CharField(blank=True, max_length=255, null=True)),
                ('display_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_rounding_line', models.BooleanField(blank=True, null=True)),
                ('exclude_from_invoice_tab', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_anglo_saxon_line', models.BooleanField(blank=True, null=True)),
                ('is_landed_costs_line', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_move_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveReversal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_mode', models.CharField(max_length=255)),
                ('date', models.DateField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('refund_method', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_move_reversal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPartialReconcile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('debit_amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('credit_amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('max_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_partial_reconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_reconciled', models.BooleanField(blank=True, null=True)),
                ('is_matched', models.BooleanField(blank=True, null=True)),
                ('is_internal_transfer', models.BooleanField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('payment_type', models.CharField(max_length=255)),
                ('partner_type', models.CharField(max_length=255)),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('payment_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_method',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentMethodLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_method_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('communication', models.CharField(blank=True, max_length=255, null=True)),
                ('group_payment', models.BooleanField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_type', models.CharField(blank=True, max_length=255, null=True)),
                ('source_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('source_amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('can_edit_wizard', models.BooleanField(blank=True, null=True)),
                ('can_group_payments', models.BooleanField(blank=True, null=True)),
                ('payment_difference_handling', models.CharField(blank=True, max_length=255, null=True)),
                ('writeoff_label', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_register',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_term',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentTermLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('value_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('days', models.IntegerField()),
                ('day_of_the_month', models.IntegerField(blank=True, null=True)),
                ('option', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_term_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPrintJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('amount_currency', models.BooleanField(blank=True, null=True)),
                ('sort_selection', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'account_print_journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField()),
                ('rule_type', models.CharField(max_length=255)),
                ('auto_reconcile', models.BooleanField(blank=True, null=True)),
                ('to_check', models.BooleanField(blank=True, null=True)),
                ('matching_order', models.CharField(max_length=255)),
                ('match_text_location_label', models.BooleanField(blank=True, null=True)),
                ('match_text_location_note', models.BooleanField(blank=True, null=True)),
                ('match_text_location_reference', models.BooleanField(blank=True, null=True)),
                ('match_nature', models.CharField(max_length=255)),
                ('match_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('match_amount_min', models.FloatField(blank=True, null=True)),
                ('match_amount_max', models.FloatField(blank=True, null=True)),
                ('match_label', models.CharField(blank=True, max_length=255, null=True)),
                ('match_label_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_note', models.CharField(blank=True, max_length=255, null=True)),
                ('match_note_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_transaction_type', models.CharField(blank=True, max_length=255, null=True)),
                ('match_transaction_type_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_same_currency', models.BooleanField(blank=True, null=True)),
                ('allow_payment_tolerance', models.BooleanField(blank=True, null=True)),
                ('payment_tolerance_param', models.FloatField(blank=True, null=True)),
                ('payment_tolerance_type', models.CharField(max_length=255)),
                ('match_partner', models.BooleanField(blank=True, null=True)),
                ('past_months_limit', models.IntegerField(blank=True, null=True)),
                ('decimal_separator', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_reconcile_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_type', models.CharField(max_length=255)),
                ('force_tax_included', models.BooleanField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('amount_string', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_reconcile_model_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelLineTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_type', models.CharField(max_length=255)),
                ('amount_string', models.CharField(blank=True, max_length=255, null=True)),
                ('force_tax_included', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_reconcile_model_line_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelPartnerMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_ref_regex', models.CharField(blank=True, max_length=255, null=True)),
                ('narration_regex', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_reconcile_model_partner_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField()),
                ('rule_type', models.CharField(max_length=255)),
                ('auto_reconcile', models.BooleanField(blank=True, null=True)),
                ('to_check', models.BooleanField(blank=True, null=True)),
                ('matching_order', models.CharField(blank=True, max_length=255, null=True)),
                ('match_text_location_label', models.BooleanField(blank=True, null=True)),
                ('match_text_location_note', models.BooleanField(blank=True, null=True)),
                ('match_text_location_reference', models.BooleanField(blank=True, null=True)),
                ('match_nature', models.CharField(max_length=255)),
                ('match_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('match_amount_min', models.FloatField(blank=True, null=True)),
                ('match_amount_max', models.FloatField(blank=True, null=True)),
                ('match_label', models.CharField(blank=True, max_length=255, null=True)),
                ('match_label_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_note', models.CharField(blank=True, max_length=255, null=True)),
                ('match_note_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_transaction_type', models.CharField(blank=True, max_length=255, null=True)),
                ('match_transaction_type_param', models.CharField(blank=True, max_length=255, null=True)),
                ('match_same_currency', models.BooleanField(blank=True, null=True)),
                ('allow_payment_tolerance', models.BooleanField(blank=True, null=True)),
                ('payment_tolerance_param', models.FloatField(blank=True, null=True)),
                ('payment_tolerance_type', models.CharField(max_length=255)),
                ('match_partner', models.BooleanField(blank=True, null=True)),
                ('decimal_separator', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_reconcile_model_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountResequenceWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('ordering', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_resequence_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountSetupBankManualConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_journal_name', models.CharField(max_length=255)),
                ('num_journals_without_account', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_setup_bank_manual_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type_tax_use', models.CharField(max_length=255)),
                ('tax_scope', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_type', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('price_include', models.BooleanField(blank=True, null=True)),
                ('include_base_amount', models.BooleanField(blank=True, null=True)),
                ('is_base_affected', models.BooleanField(blank=True, null=True)),
                ('analytic', models.BooleanField(blank=True, null=True)),
                ('tax_exigibility', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxCarryoverLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('amount', models.FloatField()),
                ('date', models.DateField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_carryover_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('preceding_subtotal', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxRepartitionLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor_percent', models.FloatField()),
                ('repartition_type', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('use_in_tax_closing', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_repartition_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxRepartitionLineTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor_percent', models.FloatField()),
                ('repartition_type', models.CharField(max_length=255)),
                ('use_in_tax_closing', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_repartition_line_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxReportLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField()),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('tag_name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('carry_over_condition_method', models.CharField(blank=True, max_length=255, null=True)),
                ('is_carryover_persistent', models.BooleanField(blank=True, null=True)),
                ('is_carryover_used_in_balance', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_report_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type_tax_use', models.CharField(max_length=255)),
                ('tax_scope', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_type', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('price_include', models.BooleanField(blank=True, null=True)),
                ('include_base_amount', models.BooleanField(blank=True, null=True)),
                ('is_base_affected', models.BooleanField(blank=True, null=True)),
                ('analytic', models.BooleanField(blank=True, null=True)),
                ('tax_exigibility', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTourUploadBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tour_upload_bill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTourUploadBillEmailConfirm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_alias', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tour_upload_bill_email_confirm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountUnreconcile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_unreconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthTotpDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('scope', models.CharField(blank=True, max_length=255, null=True)),
                ('index', models.CharField(blank=True, max_length=8, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_totp_device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthTotpWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('qrcode', models.BinaryField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=7, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_totp_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BarcodeNomenclature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('upc_ean_conv', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'barcode_nomenclature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BarcodeRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('encoding', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('pattern', models.CharField(max_length=32)),
                ('alias', models.CharField(max_length=32)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'barcode_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseAutomation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('trigger', models.CharField(max_length=255)),
                ('trg_date_range', models.IntegerField(blank=True, null=True)),
                ('trg_date_range_type', models.CharField(blank=True, max_length=255, null=True)),
                ('filter_pre_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('filter_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_automation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseDocumentLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_document_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseEnableProfilingWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_enable_profiling_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseGeoProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tech_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_geo_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.BinaryField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('column_name', models.CharField(blank=True, max_length=255, null=True)),
                ('field_name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsChar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharNoreadonly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_noreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharReadonly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_readonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharRequired',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStillreadonly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_stillreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f', models.FloatField(blank=True, null=True)),
                ('m', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('c', models.CharField(blank=True, max_length=255, null=True)),
                ('d', models.DateField(blank=True, null=True)),
                ('dt', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_complex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsFloat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(blank=True, null=True)),
                ('value2', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_float',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2O',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequired',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequiredRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2MChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m_child',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsPreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('somevalue', models.IntegerField()),
                ('othervalue', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(max_length=255)),
                ('format', models.CharField(max_length=255)),
                ('data', models.BinaryField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=6)),
                ('data', models.BinaryField()),
                ('filename', models.CharField(max_length=255)),
                ('overwrite', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageInstall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=255)),
                ('overwrite', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_install',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUninstall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_all', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_uninstall',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('added', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpgrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_info', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_upgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_by_email', models.BooleanField(blank=True, null=True)),
                ('group_by_name', models.BooleanField(blank=True, null=True)),
                ('group_by_is_company', models.BooleanField(blank=True, null=True)),
                ('group_by_vat', models.BooleanField(blank=True, null=True)),
                ('group_by_parent_id', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('number_group', models.IntegerField(blank=True, null=True)),
                ('exclude_contact', models.BooleanField(blank=True, null=True)),
                ('exclude_journal_item', models.BooleanField(blank=True, null=True)),
                ('maximum_group', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_id', models.IntegerField(blank=True, null=True)),
                ('aggr_ids', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseUpdateTranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_update_translations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusBus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bus_bus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusPresence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_poll', models.DateTimeField(blank=True, null=True)),
                ('last_presence', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'bus_presence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alarm_type', models.CharField(max_length=255)),
                ('duration', models.IntegerField()),
                ('interval', models.CharField(max_length=255)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_alarm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAttendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(blank=True, max_length=255, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('availability', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_attendee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('videocall_location', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy', models.CharField(max_length=255)),
                ('show_as', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('stop', models.DateTimeField()),
                ('allday', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=255, null=True)),
                ('recurrency', models.BooleanField(blank=True, null=True)),
                ('follow_recurrence', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('google_id', models.CharField(blank=True, max_length=255, null=True)),
                ('need_sync', models.BooleanField(blank=True, null=True)),
                ('microsoft_id', models.CharField(blank=True, max_length=255, null=True)),
                ('need_sync_m', models.BooleanField(blank=True, null=True)),
                ('microsoft_recurrence_master_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'calendar_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_event_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('partner_checked', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarRecurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('event_tz', models.CharField(blank=True, max_length=255, null=True)),
                ('rrule', models.CharField(blank=True, max_length=255, null=True)),
                ('rrule_type', models.CharField(blank=True, max_length=255, null=True)),
                ('end_type', models.CharField(blank=True, max_length=255, null=True)),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('mon', models.BooleanField(blank=True, null=True)),
                ('tue', models.BooleanField(blank=True, null=True)),
                ('wed', models.BooleanField(blank=True, null=True)),
                ('thu', models.BooleanField(blank=True, null=True)),
                ('fri', models.BooleanField(blank=True, null=True)),
                ('sat', models.BooleanField(blank=True, null=True)),
                ('sun', models.BooleanField(blank=True, null=True)),
                ('month_by', models.CharField(blank=True, max_length=255, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('weekday', models.CharField(blank=True, max_length=255, null=True)),
                ('byday', models.CharField(blank=True, max_length=255, null=True)),
                ('until', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('google_id', models.CharField(blank=True, max_length=255, null=True)),
                ('need_sync', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('microsoft_id', models.CharField(blank=True, max_length=255, null=True)),
                ('need_sync_m', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_recurrence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CashBoxOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cash_box_out',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_login', models.CharField(blank=True, max_length=255, null=True)),
                ('new_passwd', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfirmStockSms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'confirm_stock_sms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_sanitized', models.CharField(blank=True, max_length=255, null=True)),
                ('email_normalized', models.CharField(blank=True, max_length=255, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('referred', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('expected_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('prorated_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('recurring_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('recurring_revenue_monthly', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('recurring_revenue_monthly_prorated', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('date_action_last', models.DateTimeField(blank=True, null=True)),
                ('date_open', models.DateTimeField(blank=True, null=True)),
                ('day_open', models.FloatField(blank=True, null=True)),
                ('day_close', models.FloatField(blank=True, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('date_conversion', models.DateTimeField(blank=True, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('function', models.CharField(blank=True, max_length=255, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_state', models.CharField(blank=True, max_length=255, null=True)),
                ('email_state', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('probability', models.FloatField(blank=True, null=True)),
                ('automated_probability', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('reveal_id', models.CharField(blank=True, max_length=255, null=True)),
                ('x_secondary_phone', models.CharField(blank=True, max_length=13, null=True)),
                ('x_secondary_mobile', models.CharField(blank=True, max_length=13, null=True)),
                ('x_vertical', models.CharField(blank=True, max_length=255, null=True)),
                ('x_total_budget', models.CharField(blank=True, max_length=255, null=True)),
                ('x_monthly_budget', models.CharField(blank=True, max_length=255, null=True)),
                ('x_purpose_of_investment', models.CharField(blank=True, max_length=255, null=True)),
                ('x_interest_in_location', models.CharField(blank=True, db_column='x_interest_In_location', max_length=255, null=True)),
                ('x_whatsapp_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('x_user_type_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('x_status_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('x_source_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('x_property_type', models.CharField(blank=True, max_length=255, null=True)),
                ('x_residential_status_ref', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'crm_lead',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('force_assignment', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('force_assignment', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('deduplicate', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadLost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_lost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadPlsUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pls_start_date', models.DateField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_pls_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadScoringFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('won_count', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('lost_count', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_scoring_frequency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadScoringFrequencyField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_scoring_frequency_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLostReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lost_reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmMergeOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_merge_opportunity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmQuotationPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_quotation_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmRecurringPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('number_of_months', models.IntegerField()),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_recurring_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('is_won', models.BooleanField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('use_quotations', models.BooleanField(blank=True, null=True)),
                ('invoiced_target', models.FloatField(blank=True, null=True)),
                ('use_leads', models.BooleanField(blank=True, null=True)),
                ('use_opportunities', models.BooleanField(blank=True, null=True)),
                ('assignment_optout', models.BooleanField(blank=True, null=True)),
                ('assignment_domain', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'crm_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('assignment_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('assignment_optout', models.BooleanField(blank=True, null=True)),
                ('assignment_max', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_team_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DecimalPrecision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('digits', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'decimal_precision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('periodicity', models.CharField(max_length=255)),
                ('next_run_date', models.DateField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('kpi_res_users_connected', models.BooleanField(blank=True, null=True)),
                ('kpi_mail_message_total', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('kpi_account_total_revenue', models.BooleanField(blank=True, null=True)),
                ('kpi_all_sale_total', models.BooleanField(blank=True, null=True)),
                ('kpi_crm_lead_created', models.BooleanField(blank=True, null=True)),
                ('kpi_crm_opportunities_won', models.BooleanField(blank=True, null=True)),
                ('kpi_project_task_opened', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'digest_digest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestTip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('tip_description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'digest_tip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpiryPickingConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'expiry_picking_confirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetchmailServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('server', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('server_type', models.CharField(max_length=255)),
                ('is_ssl', models.BooleanField(blank=True, null=True)),
                ('attach', models.BooleanField(blank=True, null=True)),
                ('original', models.BooleanField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('user', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('configuration', models.TextField(blank=True, null=True)),
                ('script', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fetchmail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarAccountReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delete_policy', models.CharField(max_length=255)),
                ('sync_policy', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'google_calendar_account_reset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_rtoken', models.CharField(blank=True, max_length=255, null=True)),
                ('calendar_token', models.CharField(blank=True, max_length=255, null=True)),
                ('calendar_token_validity', models.DateTimeField(blank=True, null=True)),
                ('calendar_sync_token', models.CharField(blank=True, max_length=255, null=True)),
                ('calendar_cal_id', models.CharField(blank=True, max_length=255, null=True)),
                ('synchronization_stopped', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'google_calendar_credentials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleDriveConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('google_drive_template_url', models.CharField(max_length=255)),
                ('name_template', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'google_drive_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateTimeField()),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('worked_hours', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrAttendanceOvertime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('duration', models.FloatField()),
                ('duration_real', models.FloatField(blank=True, null=True)),
                ('adjustment', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_attendance_overtime',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(blank=True, null=True)),
                ('trial_date_end', models.DateField(blank=True, null=True)),
                ('wage', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('notes', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('kanban_state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_contract',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrContractType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_contract_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartureReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_departure_reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartureWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_description', models.TextField(blank=True, null=True)),
                ('departure_date', models.DateField()),
                ('archive_private_address', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('set_date_end', models.BooleanField(blank=True, null=True)),
                ('cancel_leaves', models.BooleanField(blank=True, null=True)),
                ('archive_allocation', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_departure_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('work_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('work_email', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_type', models.CharField(max_length=255)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('marital', models.CharField(blank=True, max_length=255, null=True)),
                ('spouse_complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spouse_birthdate', models.DateField(blank=True, null=True)),
                ('children', models.IntegerField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('ssnid', models.CharField(blank=True, max_length=255, null=True)),
                ('sinid', models.CharField(blank=True, max_length=255, null=True)),
                ('identification_id', models.CharField(blank=True, max_length=255, null=True)),
                ('passport_id', models.CharField(blank=True, max_length=255, null=True)),
                ('permit_no', models.CharField(blank=True, max_length=255, null=True)),
                ('visa_no', models.CharField(blank=True, max_length=255, null=True)),
                ('visa_expire', models.DateField(blank=True, null=True)),
                ('work_permit_expiration_date', models.DateField(blank=True, null=True)),
                ('work_permit_scheduled_activity', models.BooleanField(blank=True, null=True)),
                ('additional_note', models.TextField(blank=True, null=True)),
                ('certificate', models.CharField(blank=True, max_length=255, null=True)),
                ('study_field', models.CharField(blank=True, max_length=255, null=True)),
                ('study_school', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('km_home_work', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('pin', models.CharField(blank=True, max_length=255, null=True)),
                ('departure_description', models.TextField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('vehicle', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_warning', models.BooleanField(blank=True, null=True)),
                ('first_contract_date', models.DateField(blank=True, null=True)),
                ('email_sent', models.BooleanField(blank=True, null=True)),
                ('ip_connected', models.BooleanField(blank=True, null=True)),
                ('manually_set_present', models.BooleanField(blank=True, null=True)),
                ('hr_presence_state_display', models.CharField(blank=True, max_length=255, null=True)),
                ('timesheet_cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('last_check_in', models.DateTimeField(blank=True, null=True)),
                ('last_check_out', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployeeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_employee_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField(blank=True, null=True)),
                ('accounting_date', models.DateField(blank=True, null=True)),
                ('unit_amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('untaxed_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('total_amount_company', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('is_refused', models.BooleanField(blank=True, null=True)),
                ('sample', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_expense',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseApproveDuplicate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_expense_approve_duplicate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseRefuseWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_expense_refuse_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('payment_state', models.CharField(blank=True, max_length=255, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('accounting_date', models.DateField(blank=True, null=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_expense_sheet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrHolidaysSummaryEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('holiday_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_holidays_summary_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('expected_employees', models.IntegerField(blank=True, null=True)),
                ('no_of_employee', models.IntegerField(blank=True, null=True)),
                ('no_of_recruitment', models.IntegerField(blank=True, null=True)),
                ('no_of_hired_employee', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('report_note', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('number_of_days', models.FloatField(blank=True, null=True)),
                ('duration_display', models.CharField(blank=True, max_length=255, null=True)),
                ('holiday_type', models.CharField(max_length=255)),
                ('multi_employee', models.BooleanField(blank=True, null=True)),
                ('request_date_from', models.DateField(blank=True, null=True)),
                ('request_date_to', models.DateField(blank=True, null=True)),
                ('request_hour_from', models.CharField(blank=True, max_length=255, null=True)),
                ('request_hour_to', models.CharField(blank=True, max_length=255, null=True)),
                ('request_date_from_period', models.CharField(blank=True, max_length=255, null=True)),
                ('request_unit_half', models.BooleanField(blank=True, null=True)),
                ('request_unit_hours', models.BooleanField(blank=True, null=True)),
                ('request_unit_custom', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_leave',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrLeaveAccrualLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('start_count', models.IntegerField(blank=True, null=True)),
                ('start_type', models.CharField(max_length=255)),
                ('is_based_on_worked_time', models.BooleanField(blank=True, null=True)),
                ('added_value', models.FloatField()),
                ('added_value_type', models.CharField(max_length=255)),
                ('frequency', models.CharField(max_length=255)),
                ('week_day', models.CharField(max_length=255)),
                ('first_day', models.IntegerField(blank=True, null=True)),
                ('second_day', models.IntegerField(blank=True, null=True)),
                ('first_month_day', models.IntegerField(blank=True, null=True)),
                ('first_month', models.CharField(blank=True, max_length=255, null=True)),
                ('second_month_day', models.IntegerField(blank=True, null=True)),
                ('second_month', models.CharField(blank=True, max_length=255, null=True)),
                ('yearly_month', models.CharField(blank=True, max_length=255, null=True)),
                ('yearly_day', models.IntegerField(blank=True, null=True)),
                ('maximum_leave', models.FloatField(blank=True, null=True)),
                ('action_with_unused_accruals', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_leave_accrual_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrLeaveAccrualPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('transition_mode', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_leave_accrual_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrLeaveAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('private_name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('number_of_days', models.FloatField(blank=True, null=True)),
                ('holiday_type', models.CharField(max_length=255)),
                ('multi_employee', models.BooleanField(blank=True, null=True)),
                ('lastcall', models.DateField(blank=True, null=True)),
                ('nextcall', models.DateField(blank=True, null=True)),
                ('allocation_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_leave_allocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrLeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_calendar_meeting', models.BooleanField(blank=True, null=True)),
                ('color_name', models.CharField(max_length=255)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('leave_validation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('requires_allocation', models.CharField(max_length=255)),
                ('employee_requests', models.CharField(max_length=255)),
                ('allocation_validation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('time_type', models.CharField(blank=True, max_length=255, null=True)),
                ('request_unit', models.CharField(max_length=255)),
                ('unpaid', models.BooleanField(blank=True, null=True)),
                ('support_document', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('timesheet_generate', models.BooleanField(blank=True, null=True)),
                ('overtime_deductible', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_leave_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrPayrollStructureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_payroll_structure_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrPlanActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('responsible', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_plan_activity_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrPlanWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_plan_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrWorkLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('location_number', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_work_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IapAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_token', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iap_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('tag', models.CharField(max_length=255)),
                ('target', models.CharField(blank=True, max_length=255, null=True)),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('context', models.CharField(max_length=255)),
                ('params_store', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActionsTodo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_id', models.IntegerField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_actions_todo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActReportXml',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(max_length=255)),
                ('report_type', models.CharField(max_length=255)),
                ('report_name', models.CharField(max_length=255)),
                ('report_file', models.CharField(blank=True, max_length=255, null=True)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('print_report_name', models.CharField(blank=True, max_length=255, null=True)),
                ('attachment_use', models.BooleanField(blank=True, null=True)),
                ('attachment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ir_act_report_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('model_name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('activity_summary', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_note', models.TextField(blank=True, null=True)),
                ('activity_date_deadline_range', models.IntegerField(blank=True, null=True)),
                ('activity_date_deadline_range_type', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_user_field_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_mass_keep_log', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('url', models.TextField()),
                ('target', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ir_act_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=255)),
                ('binding_view_types', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=255, null=True)),
                ('context', models.CharField(max_length=255)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('res_model', models.CharField(max_length=255)),
                ('target', models.CharField(blank=True, max_length=255, null=True)),
                ('view_mode', models.CharField(max_length=255)),
                ('usage', models.CharField(blank=True, max_length=255, null=True)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('filter', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_window',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('view_mode', models.CharField(max_length=255)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_window_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bundle', models.CharField(max_length=255)),
                ('directive', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(max_length=255)),
                ('target', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_asset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('res_field', models.CharField(blank=True, max_length=255, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=1024, null=True)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('db_datas', models.BinaryField(blank=True, null=True)),
                ('store_fname', models.CharField(blank=True, max_length=255, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=40, null=True)),
                ('mimetype', models.CharField(blank=True, max_length=255, null=True)),
                ('index_content', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrConfigParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_config_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrCron',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cron_name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('interval_number', models.IntegerField(blank=True, null=True)),
                ('interval_type', models.CharField(blank=True, max_length=255, null=True)),
                ('numbercall', models.IntegerField(blank=True, null=True)),
                ('doall', models.BooleanField(blank=True, null=True)),
                ('nextcall', models.DateTimeField()),
                ('lastcall', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_cron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrCronTrigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_at', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_cron_trigger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDefault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(blank=True, max_length=255, null=True)),
                ('json_value', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemoFailure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo_failure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemoFailureWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo_failure_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('resource', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExportsLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('domain', models.TextField()),
                ('context', models.TextField()),
                ('sort', models.TextField()),
                ('model_id', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrLogging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_uid', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_uid', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('dbname', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('path', models.CharField(max_length=255)),
                ('func', models.CharField(max_length=255)),
                ('line', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ir_logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrMailServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('from_filter', models.CharField(blank=True, max_length=255, null=True)),
                ('smtp_host', models.CharField(max_length=255)),
                ('smtp_port', models.IntegerField()),
                ('smtp_authentication', models.CharField(max_length=255)),
                ('smtp_user', models.CharField(blank=True, max_length=255, null=True)),
                ('smtp_pass', models.CharField(blank=True, max_length=255, null=True)),
                ('smtp_encryption', models.CharField(max_length=255)),
                ('smtp_ssl_certificate', models.BinaryField(blank=True, null=True)),
                ('smtp_ssl_private_key', models.BinaryField(blank=True, null=True)),
                ('smtp_debug', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_mail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255, unique=True)),
                ('order', models.CharField(max_length=255)),
                ('info', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('transient', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_mail_thread', models.BooleanField(blank=True, null=True)),
                ('is_mail_activity', models.BooleanField(blank=True, null=True)),
                ('is_mail_blacklist', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('definition', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(max_length=1)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_constraint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('noupdate', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('module', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(max_length=255)),
                ('relation', models.CharField(blank=True, max_length=255, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=255, null=True)),
                ('field_description', models.CharField(max_length=255)),
                ('help', models.TextField(blank=True, null=True)),
                ('ttype', models.CharField(max_length=255)),
                ('copied', models.BooleanField(blank=True, null=True)),
                ('related', models.CharField(blank=True, max_length=255, null=True)),
                ('required', models.BooleanField(blank=True, null=True)),
                ('readonly', models.BooleanField(blank=True, null=True)),
                ('index', models.BooleanField(blank=True, null=True)),
                ('translate', models.BooleanField(blank=True, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('on_delete', models.CharField(blank=True, max_length=255, null=True)),
                ('domain', models.CharField(blank=True, max_length=255, null=True)),
                ('group_expand', models.BooleanField(blank=True, null=True)),
                ('selectable', models.BooleanField(blank=True, null=True)),
                ('relation_table', models.CharField(blank=True, max_length=255, null=True)),
                ('column1', models.CharField(blank=True, max_length=255, null=True)),
                ('column2', models.CharField(blank=True, max_length=255, null=True)),
                ('compute', models.TextField(blank=True, null=True)),
                ('depends', models.CharField(blank=True, max_length=255, null=True)),
                ('store', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('tracking', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFieldsSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_fields_selection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('visible', models.BooleanField(blank=True, null=True)),
                ('exclusive', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=16, null=True)),
                ('latest_version', models.CharField(blank=True, max_length=255, null=True)),
                ('shortdesc', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('application', models.BooleanField(blank=True, null=True)),
                ('demo', models.BooleanField(blank=True, null=True)),
                ('web', models.BooleanField(blank=True, null=True)),
                ('license', models.CharField(blank=True, max_length=32, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('auto_install', models.BooleanField(blank=True, null=True)),
                ('to_buy', models.BooleanField(blank=True, null=True)),
                ('maintainer', models.CharField(blank=True, max_length=255, null=True)),
                ('contributors', models.TextField(blank=True, null=True)),
                ('published_version', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('menus_by_module', models.TextField(blank=True, null=True)),
                ('reports_by_module', models.TextField(blank=True, null=True)),
                ('views_by_module', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModuleDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_install_required', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_module_dependency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModuleExclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_module_exclusion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('session', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('init_stack_trace', models.TextField(blank=True, null=True)),
                ('sql', models.TextField(blank=True, null=True)),
                ('traces_async', models.TextField(blank=True, null=True)),
                ('traces_sync', models.TextField(blank=True, null=True)),
                ('qweb', models.TextField(blank=True, null=True)),
                ('entry_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('res_id', models.CharField(blank=True, max_length=255, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_integer', models.IntegerField(blank=True, null=True)),
                ('value_text', models.TextField(blank=True, null=True)),
                ('value_binary', models.BinaryField(blank=True, null=True)),
                ('value_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('value_datetime', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('domain_force', models.TextField(blank=True, null=True)),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('global_field', models.BooleanField(blank=True, db_column='global', null=True)),
            ],
            options={
                'db_table': 'ir_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('implementation', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('number_next', models.IntegerField()),
                ('number_increment', models.IntegerField()),
                ('padding', models.IntegerField()),
                ('use_date_range', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequenceDateRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('number_next', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_sequence_date_range',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrServerObjectLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('evaluation_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_server_object_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('src', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('module', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_translation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('web_icon', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('arch_db', models.TextField(blank=True, null=True)),
                ('arch_fs', models.CharField(blank=True, max_length=255, null=True)),
                ('arch_updated', models.BooleanField(blank=True, null=True)),
                ('arch_prev', models.TextField(blank=True, null=True)),
                ('field_parent', models.CharField(blank=True, max_length=255, null=True)),
                ('mode', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('customize_show', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewCustom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arch', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_view_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=255, null=True)),
                ('res_id', models.IntegerField()),
                ('res_name', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('date_deadline', models.DateField()),
                ('automated', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('summary', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('delay_count', models.IntegerField(blank=True, null=True)),
                ('delay_unit', models.CharField(max_length=255)),
                ('delay_from', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('decoration_type', models.CharField(blank=True, max_length=255, null=True)),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('chaining_type', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('default_note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_activity_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('alias_defaults', models.TextField()),
                ('alias_force_thread_id', models.IntegerField(blank=True, null=True)),
                ('alias_parent_thread_id', models.IntegerField(blank=True, null=True)),
                ('alias_contact', models.CharField(max_length=255)),
                ('alias_bounced_content', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255, unique=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_blacklist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailBlacklistRemove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_blacklist_remove',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('channel_type', models.CharField(blank=True, max_length=255, null=True)),
                ('default_display_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('public', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_channel_name', models.CharField(blank=True, max_length=255, null=True)),
                ('fold_state', models.CharField(blank=True, max_length=255, null=True)),
                ('is_minimized', models.BooleanField(blank=True, null=True)),
                ('is_pinned', models.BooleanField(blank=True, null=True)),
                ('last_interest_dt', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelRtcSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_screen_sharing_on', models.BooleanField(blank=True, null=True)),
                ('is_camera_on', models.BooleanField(blank=True, null=True)),
                ('is_muted', models.BooleanField(blank=True, null=True)),
                ('is_deaf', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel_rtc_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('layout', models.CharField(blank=True, max_length=255, null=True)),
                ('add_sign', models.BooleanField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('composition_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=255, null=True)),
                ('use_active_domain', models.BooleanField(blank=True, null=True)),
                ('active_domain', models.TextField(blank=True, null=True)),
                ('message_type', models.CharField(max_length=255)),
                ('reply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_to_force_new', models.BooleanField(blank=True, null=True)),
                ('is_log', models.BooleanField(blank=True, null=True)),
                ('notify', models.BooleanField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('auto_delete_message', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_compose_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_followers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailGuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('access_token', models.CharField(max_length=255)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_guest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailIceServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.CharField(max_length=255)),
                ('uri', models.CharField(max_length=255)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('credential', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_ice_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_html', models.TextField(blank=True, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('headers', models.TextField(blank=True, null=True)),
                ('is_notification', models.BooleanField(blank=True, null=True)),
                ('email_to', models.TextField(blank=True, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('failure_type', models.CharField(blank=True, max_length=255, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('scheduled_date', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=255, null=True)),
                ('message_type', models.CharField(max_length=255)),
                ('is_internal', models.BooleanField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_to_force_new', models.BooleanField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('email_layout_xmlid', models.CharField(blank=True, max_length=255, null=True)),
                ('add_sign', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'mail_message_reaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('internal', models.BooleanField(blank=True, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=255, null=True)),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('hidden', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message_subtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(max_length=255)),
                ('notification_status', models.CharField(blank=True, max_length=255, null=True)),
                ('is_read', models.BooleanField(blank=True, null=True)),
                ('read_date', models.DateTimeField(blank=True, null=True)),
                ('failure_type', models.CharField(blank=True, max_length=255, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('sms_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'mail_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resend', models.BooleanField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailShortcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255)),
                ('substitution', models.TextField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_shortcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model_0', models.CharField(blank=True, db_column='model', max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('use_default_to', models.BooleanField(blank=True, null=True)),
                ('email_to', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_to', models.CharField(blank=True, max_length=255, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('report_name', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled_date', models.CharField(blank=True, max_length=255, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTemplatePreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('error_msg', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_template_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTrackingValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_desc', models.CharField(max_length=255)),
                ('field_type', models.CharField(blank=True, max_length=255, null=True)),
                ('old_value_integer', models.IntegerField(blank=True, null=True)),
                ('old_value_float', models.FloatField(blank=True, null=True)),
                ('old_value_monetary', models.FloatField(blank=True, null=True)),
                ('old_value_char', models.CharField(blank=True, max_length=255, null=True)),
                ('old_value_text', models.TextField(blank=True, null=True)),
                ('old_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('new_value_integer', models.IntegerField(blank=True, null=True)),
                ('new_value_float', models.FloatField(blank=True, null=True)),
                ('new_value_monetary', models.FloatField(blank=True, null=True)),
                ('new_value_char', models.CharField(blank=True, max_length=255, null=True)),
                ('new_value_text', models.TextField(blank=True, null=True)),
                ('new_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('tracking_sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_tracking_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('send_mail', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_wizard_invite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MicrosoftCalendarAccountReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delete_policy', models.CharField(max_length=255)),
                ('sync_policy', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'microsoft_calendar_account_reset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('open', models.BooleanField(blank=True, null=True)),
                ('date_done', models.DateField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'note_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'note_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'note_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAcquirer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('provider', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('allow_tokenization', models.BooleanField(blank=True, null=True)),
                ('capture_manually', models.BooleanField(blank=True, null=True)),
                ('fees_active', models.BooleanField(blank=True, null=True)),
                ('fees_dom_fixed', models.FloatField(blank=True, null=True)),
                ('fees_dom_var', models.FloatField(blank=True, null=True)),
                ('fees_int_fixed', models.FloatField(blank=True, null=True)),
                ('fees_int_var', models.FloatField(blank=True, null=True)),
                ('display_as', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_msg', models.TextField(blank=True, null=True)),
                ('pending_msg', models.TextField(blank=True, null=True)),
                ('auth_msg', models.TextField(blank=True, null=True)),
                ('done_msg', models.TextField(blank=True, null=True)),
                ('cancel_msg', models.TextField(blank=True, null=True)),
                ('support_authorization', models.BooleanField(blank=True, null=True)),
                ('support_fees_computation', models.BooleanField(blank=True, null=True)),
                ('support_tokenization', models.BooleanField(blank=True, null=True)),
                ('support_refund', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('module_state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('qr_code', models.BooleanField(blank=True, null=True)),
                ('so_reference_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'payment_acquirer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAcquirerOnboardingWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_email_account', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_seller_account', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_pdt_token', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_secret_key', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_publishable_key', models.CharField(blank=True, max_length=255, null=True)),
                ('manual_name', models.CharField(blank=True, max_length=255, null=True)),
                ('journal_name', models.CharField(blank=True, max_length=255, null=True)),
                ('acc_number', models.CharField(blank=True, max_length=255, null=True)),
                ('manual_post_msg', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_acquirer_onboarding_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_icon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentLinkWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('amount_max', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_link_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentRefundWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_to_refund', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_refund_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('acquirer_ref', models.CharField(max_length=255)),
                ('verified', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=255, unique=True)),
                ('acquirer_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('fees', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('state', models.CharField(max_length=255)),
                ('state_message', models.TextField(blank=True, null=True)),
                ('last_state_change', models.DateTimeField(blank=True, null=True)),
                ('operation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_post_processed', models.BooleanField(blank=True, null=True)),
                ('tokenize', models.BooleanField(blank=True, null=True)),
                ('landing_route', models.CharField(blank=True, max_length=255, null=True)),
                ('callback_res_id', models.IntegerField(blank=True, null=True)),
                ('callback_method', models.CharField(blank=True, max_length=255, null=True)),
                ('callback_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('callback_is_done', models.BooleanField(blank=True, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_lang', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_email', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_address', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_city', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255, unique=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phone_blacklist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneBlacklistRemove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=255)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'phone_blacklist_remove',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_share',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welcome_message', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizardUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('move_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procurement_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_variant', models.CharField(max_length=255)),
                ('display_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeCustomValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_value', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_attribute_custom_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('is_custom', models.BooleanField(blank=True, null=True)),
                ('html_color', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_attribute_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('packaging_reserve_method', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'product_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFetchImageWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_products_selected', models.IntegerField(blank=True, null=True)),
                ('nb_products_to_process', models.IntegerField(blank=True, null=True)),
                ('nb_products_unable_to_process', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_fetch_image_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLabelLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('print_format', models.CharField(max_length=255)),
                ('custom_quantity', models.IntegerField()),
                ('extra_html', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('picking_quantity', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_label_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductMargin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('invoice_state', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_margin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPackaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('sales', models.BooleanField(blank=True, null=True)),
                ('purchase', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPricelist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('discount_policy', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_pricelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPricelistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('applied_on', models.CharField(max_length=255)),
                ('base', models.CharField(max_length=255)),
                ('price_surcharge', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_round', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_min_margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_max_margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('compute_price', models.CharField(max_length=255)),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('percent_price', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_pricelist_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_code', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('combination_indices', models.CharField(blank=True, max_length=255, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('can_image_variant_1024_be_zoomed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('image_fetch_pending', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductRemoval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('method', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_removal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReplenish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_has_variants', models.BooleanField()),
                ('quantity', models.FloatField()),
                ('date_planned', models.DateTimeField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_replenish',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSupplierinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('min_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('delay', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_supplierinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_purchase', models.TextField(blank=True, null=True)),
                ('description_sale', models.TextField(blank=True, null=True)),
                ('detailed_type', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('list_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('sale_ok', models.BooleanField(blank=True, null=True)),
                ('purchase_ok', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('default_code', models.CharField(blank=True, max_length=255, null=True)),
                ('can_image_1024_be_zoomed', models.BooleanField(blank=True, null=True)),
                ('has_configurable_attributes', models.BooleanField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('service_type', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_line_warn', models.CharField(max_length=255)),
                ('sale_line_warn_msg', models.TextField(blank=True, null=True)),
                ('expense_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_delay', models.FloatField(blank=True, null=True)),
                ('tracking', models.CharField(max_length=255)),
                ('description_picking', models.TextField(blank=True, null=True)),
                ('description_pickingout', models.TextField(blank=True, null=True)),
                ('description_pickingin', models.TextField(blank=True, null=True)),
                ('can_be_expensed', models.BooleanField(blank=True, null=True)),
                ('service_tracking', models.CharField(blank=True, max_length=255, null=True)),
                ('use_expiration_date', models.BooleanField(blank=True, null=True)),
                ('expiration_time', models.IntegerField(blank=True, null=True)),
                ('use_time', models.IntegerField(blank=True, null=True)),
                ('removal_time', models.IntegerField(blank=True, null=True)),
                ('alert_time', models.IntegerField(blank=True, null=True)),
                ('purchase_method', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_line_warn', models.CharField(max_length=255)),
                ('purchase_line_warn_msg', models.TextField(blank=True, null=True)),
                ('service_to_purchase', models.BooleanField(blank=True, null=True)),
                ('landed_cost_ok', models.BooleanField(blank=True, null=True)),
                ('split_method_landed_cost', models.CharField(blank=True, max_length=255, null=True)),
                ('product_add_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('service_upsell_threshold', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplateAttributeExclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_template_attribute_exclusion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplateAttributeLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('value_count', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_template_attribute_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplateAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptav_active', models.BooleanField(blank=True, null=True)),
                ('price_extra', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_template_attribute_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_collaborator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCreateInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_create_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCreateSaleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_create_sale_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCreateSaleOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_unit', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_create_sale_order_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectDeleteWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_delete_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('is_reached', models.BooleanField(blank=True, null=True)),
                ('reached_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_milestone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('partner_email', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('label_tasks', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('privacy_visibility', models.CharField(max_length=255)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('allow_subtasks', models.BooleanField(blank=True, null=True)),
                ('allow_recurring_tasks', models.BooleanField(blank=True, null=True)),
                ('allow_task_dependencies', models.BooleanField(blank=True, null=True)),
                ('rating_request_deadline', models.DateTimeField(blank=True, null=True)),
                ('rating_active', models.BooleanField(blank=True, null=True)),
                ('rating_status', models.CharField(max_length=255)),
                ('rating_status_period', models.CharField(max_length=255)),
                ('last_update_status', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('allow_timesheets', models.BooleanField(blank=True, null=True)),
                ('allow_billable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProjectStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_project_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSaleLineEmployeeMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_unit', models.FloatField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('is_cost_changed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_sale_line_employee_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectSalesCallLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_agent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('already_assign_agent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_lead_id', models.CharField(blank=True, max_length=255, null=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('client_number', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_agent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_agent_number', models.CharField(blank=True, max_length=255, null=True)),
                ('call_duration', models.CharField(blank=True, max_length=255, null=True)),
                ('call_type', models.CharField(blank=True, max_length=255, null=True)),
                ('call_time', models.CharField(blank=True, max_length=255, null=True)),
                ('call_date', models.CharField(blank=True, max_length=255, null=True)),
                ('qualified_call', models.CharField(blank=True, max_length=255, null=True)),
                ('verified_call', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_sales_call_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectShareWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('access_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('display_access_mode', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_share_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_last_value', models.FloatField(blank=True, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('kanban_state', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('date_assign', models.DateTimeField(blank=True, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('planned_hours', models.FloatField(blank=True, null=True)),
                ('partner_email', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('working_hours_open', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('working_hours_close', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('working_days_open', models.FloatField(blank=True, null=True)),
                ('working_days_close', models.FloatField(blank=True, null=True)),
                ('recurring_task', models.BooleanField(blank=True, null=True)),
                ('remaining_hours', models.FloatField(blank=True, null=True)),
                ('effective_hours', models.FloatField(blank=True, null=True)),
                ('total_hours_spent', models.FloatField(blank=True, null=True)),
                ('progress', models.FloatField(blank=True, null=True)),
                ('overtime', models.FloatField(blank=True, null=True)),
                ('subtask_effective_hours', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskCreateTimesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_spent', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_create_timesheet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskRecurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_recurrence_date', models.DateField(blank=True, null=True)),
                ('recurrence_left', models.IntegerField(blank=True, null=True)),
                ('repeat_interval', models.IntegerField(blank=True, null=True)),
                ('repeat_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_type', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_until', models.DateField(blank=True, null=True)),
                ('repeat_number', models.IntegerField(blank=True, null=True)),
                ('repeat_on_month', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_on_year', models.CharField(blank=True, max_length=255, null=True)),
                ('mon', models.BooleanField(blank=True, null=True)),
                ('tue', models.BooleanField(blank=True, null=True)),
                ('wed', models.BooleanField(blank=True, null=True)),
                ('thu', models.BooleanField(blank=True, null=True)),
                ('fri', models.BooleanField(blank=True, null=True)),
                ('sat', models.BooleanField(blank=True, null=True)),
                ('sun', models.BooleanField(blank=True, null=True)),
                ('repeat_day', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_week', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_weekday', models.CharField(blank=True, max_length=255, null=True)),
                ('repeat_month', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_recurrence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('legend_blocked', models.CharField(max_length=255)),
                ('legend_done', models.CharField(max_length=255)),
                ('legend_normal', models.CharField(max_length=255)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('auto_validation_kanban_state', models.BooleanField(blank=True, null=True)),
                ('is_closed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskTypeDeleteWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_type_delete_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskUserRel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_user_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('progress', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('date_order', models.DateTimeField()),
                ('date_approve', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invoice_count', models.IntegerField(blank=True, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=255, null=True)),
                ('date_planned', models.DateTimeField(blank=True, null=True)),
                ('date_calendar_start', models.DateTimeField(blank=True, null=True)),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('currency_rate', models.FloatField(blank=True, null=True)),
                ('mail_reminder_confirmed', models.BooleanField(blank=True, null=True)),
                ('mail_reception_confirmed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('effective_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('product_uom_qty', models.FloatField(blank=True, null=True)),
                ('date_planned', models.DateTimeField(blank=True, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_tax', models.FloatField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('qty_invoiced', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_received_method', models.CharField(blank=True, max_length=255, null=True)),
                ('qty_received', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_received_manual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_to_invoice', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_packaging_qty', models.FloatField(blank=True, null=True)),
                ('display_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('product_description_variants', models.CharField(blank=True, max_length=255, null=True)),
                ('propagate_cancel', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_order_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RatingRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('res_name', models.CharField(blank=True, max_length=255, null=True)),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=255, null=True)),
                ('res_id', models.IntegerField()),
                ('parent_res_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_res_model_0', models.CharField(blank=True, db_column='parent_res_model', max_length=255, null=True)),
                ('parent_res_id', models.IntegerField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('rating_text', models.CharField(blank=True, max_length=255, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('is_internal', models.BooleanField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('consumed', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('publisher_comment', models.TextField(blank=True, null=True)),
                ('publisher_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rating_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('pdf', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportPaperformat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=255, null=True)),
                ('margin_top', models.FloatField(blank=True, null=True)),
                ('margin_bottom', models.FloatField(blank=True, null=True)),
                ('margin_left', models.FloatField(blank=True, null=True)),
                ('margin_right', models.FloatField(blank=True, null=True)),
                ('page_height', models.IntegerField(blank=True, null=True)),
                ('page_width', models.IntegerField(blank=True, null=True)),
                ('orientation', models.CharField(blank=True, max_length=255, null=True)),
                ('header_line', models.BooleanField(blank=True, null=True)),
                ('header_spacing', models.IntegerField(blank=True, null=True)),
                ('disable_shrinking', models.BooleanField(blank=True, null=True)),
                ('dpi', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_paperformat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('bic', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('report_header', models.TextField(blank=True, null=True)),
                ('report_footer', models.TextField(blank=True, null=True)),
                ('company_details', models.TextField(blank=True, null=True)),
                ('logo_web', models.BinaryField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('company_registry', models.CharField(blank=True, max_length=255, null=True)),
                ('base_onboarding_company_state', models.CharField(blank=True, max_length=255, null=True)),
                ('font', models.CharField(blank=True, max_length=255, null=True)),
                ('primary_color', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_color', models.CharField(blank=True, max_length=255, null=True)),
                ('layout_background', models.CharField(max_length=255)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('snailmail_color', models.BooleanField(blank=True, null=True)),
                ('snailmail_cover', models.BooleanField(blank=True, null=True)),
                ('snailmail_duplex', models.BooleanField(blank=True, null=True)),
                ('fiscalyear_last_day', models.IntegerField()),
                ('fiscalyear_last_month', models.CharField(max_length=255)),
                ('period_lock_date', models.DateField(blank=True, null=True)),
                ('fiscalyear_lock_date', models.DateField(blank=True, null=True)),
                ('tax_lock_date', models.DateField(blank=True, null=True)),
                ('expects_chart_of_accounts', models.BooleanField(blank=True, null=True)),
                ('bank_account_code_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('cash_account_code_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_account_code_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_calculation_rounding_method', models.CharField(blank=True, max_length=255, null=True)),
                ('anglo_saxon_accounting', models.BooleanField(blank=True, null=True)),
                ('qr_code', models.BooleanField(blank=True, null=True)),
                ('invoice_is_email', models.BooleanField(blank=True, null=True)),
                ('invoice_is_print', models.BooleanField(blank=True, null=True)),
                ('account_opening_date', models.DateField()),
                ('account_setup_bank_data_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_setup_fy_data_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_setup_coa_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_setup_taxes_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_onboarding_invoice_layout_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_onboarding_create_invoice_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_onboarding_sale_tax_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_invoice_onboarding_state', models.CharField(blank=True, max_length=255, null=True)),
                ('account_dashboard_onboarding_state', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_terms', models.TextField(blank=True, null=True)),
                ('terms_type', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_terms_html', models.TextField(blank=True, null=True)),
                ('account_setup_bill_state', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_exigibility', models.BooleanField(blank=True, null=True)),
                ('payment_acquirer_onboarding_state', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_onboarding_payment_method', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_is_snailmail', models.BooleanField(blank=True, null=True)),
                ('portal_confirmation_sign', models.BooleanField(blank=True, null=True)),
                ('portal_confirmation_pay', models.BooleanField(blank=True, null=True)),
                ('quotation_validity_days', models.IntegerField(blank=True, null=True)),
                ('sale_quotation_onboarding_state', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_onboarding_order_confirmation_state', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_onboarding_sample_quotation_state', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_onboarding_payment_method', models.CharField(blank=True, max_length=255, null=True)),
                ('stock_move_email_validation', models.BooleanField(blank=True, null=True)),
                ('annual_inventory_month', models.CharField(blank=True, max_length=255, null=True)),
                ('annual_inventory_day', models.IntegerField(blank=True, null=True)),
                ('stock_move_sms_validation', models.BooleanField(blank=True, null=True)),
                ('has_received_warning_stock_sms', models.BooleanField(blank=True, null=True)),
                ('security_lead', models.FloatField()),
                ('hr_presence_control_email_amount', models.IntegerField(blank=True, null=True)),
                ('hr_presence_control_ip_list', models.CharField(blank=True, max_length=255, null=True)),
                ('social_twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('social_facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('social_github', models.CharField(blank=True, max_length=255, null=True)),
                ('social_linkedin', models.CharField(blank=True, max_length=255, null=True)),
                ('social_youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('social_instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('hr_presence_last_compute_date', models.DateTimeField(blank=True, null=True)),
                ('po_lead', models.FloatField()),
                ('po_lock', models.CharField(blank=True, max_length=255, null=True)),
                ('po_double_validation', models.CharField(blank=True, max_length=255, null=True)),
                ('po_double_validation_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('days_to_purchase', models.FloatField(blank=True, null=True)),
                ('hr_attendance_overtime', models.BooleanField(blank=True, null=True)),
                ('overtime_start_date', models.DateField(blank=True, null=True)),
                ('overtime_company_threshold', models.IntegerField(blank=True, null=True)),
                ('overtime_employee_threshold', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigInstaller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_installer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('user_default_rights', models.BooleanField(blank=True, null=True)),
                ('external_email_server_default', models.BooleanField(blank=True, null=True)),
                ('module_base_import', models.BooleanField(blank=True, null=True)),
                ('module_google_calendar', models.BooleanField(blank=True, null=True)),
                ('module_microsoft_calendar', models.BooleanField(blank=True, null=True)),
                ('module_mail_plugin', models.BooleanField(blank=True, null=True)),
                ('module_google_drive', models.BooleanField(blank=True, null=True)),
                ('module_google_spreadsheet', models.BooleanField(blank=True, null=True)),
                ('module_auth_oauth', models.BooleanField(blank=True, null=True)),
                ('module_auth_ldap', models.BooleanField(blank=True, null=True)),
                ('module_base_gengo', models.BooleanField(blank=True, null=True)),
                ('module_account_inter_company_rules', models.BooleanField(blank=True, null=True)),
                ('module_pad', models.BooleanField(blank=True, null=True)),
                ('module_voip', models.BooleanField(blank=True, null=True)),
                ('module_web_unsplash', models.BooleanField(blank=True, null=True)),
                ('module_partner_autocomplete', models.BooleanField(blank=True, null=True)),
                ('module_base_geolocalize', models.BooleanField(blank=True, null=True)),
                ('module_google_recaptcha', models.BooleanField(blank=True, null=True)),
                ('group_multi_currency', models.BooleanField(blank=True, null=True)),
                ('show_effect', models.BooleanField(blank=True, null=True)),
                ('profiling_enabled_until', models.DateTimeField(blank=True, null=True)),
                ('module_product_images', models.BooleanField(blank=True, null=True)),
                ('fail_counter', models.IntegerField(blank=True, null=True)),
                ('alias_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('restrict_template_rendering', models.BooleanField(blank=True, null=True)),
                ('use_twilio_rtc_servers', models.BooleanField(blank=True, null=True)),
                ('twilio_account_sid', models.CharField(blank=True, max_length=255, null=True)),
                ('twilio_account_token', models.CharField(blank=True, max_length=255, null=True)),
                ('group_analytic_accounting', models.BooleanField(blank=True, null=True)),
                ('auth_signup_reset_password', models.BooleanField(blank=True, null=True)),
                ('auth_signup_uninvited', models.CharField(blank=True, max_length=255, null=True)),
                ('group_discount_per_so_line', models.BooleanField(blank=True, null=True)),
                ('group_uom', models.BooleanField(blank=True, null=True)),
                ('group_product_variant', models.BooleanField(blank=True, null=True)),
                ('module_sale_product_configurator', models.BooleanField(blank=True, null=True)),
                ('module_sale_product_matrix', models.BooleanField(blank=True, null=True)),
                ('group_stock_packaging', models.BooleanField(blank=True, null=True)),
                ('group_product_pricelist', models.BooleanField(blank=True, null=True)),
                ('group_sale_pricelist', models.BooleanField(blank=True, null=True)),
                ('product_pricelist_setting', models.CharField(blank=True, max_length=255, null=True)),
                ('product_weight_in_lbs', models.CharField(blank=True, max_length=255, null=True)),
                ('product_volume_volume_in_cubic_feet', models.CharField(blank=True, max_length=255, null=True)),
                ('digest_emails', models.BooleanField(blank=True, null=True)),
                ('module_account_accountant', models.BooleanField(blank=True, null=True)),
                ('group_analytic_tags', models.BooleanField(blank=True, null=True)),
                ('group_warning_account', models.BooleanField(blank=True, null=True)),
                ('group_cash_rounding', models.BooleanField(blank=True, null=True)),
                ('group_show_line_subtotals_tax_excluded', models.BooleanField(blank=True, null=True)),
                ('group_show_line_subtotals_tax_included', models.BooleanField(blank=True, null=True)),
                ('group_show_sale_receipts', models.BooleanField(blank=True, null=True)),
                ('group_show_purchase_receipts', models.BooleanField(blank=True, null=True)),
                ('show_line_subtotals_tax_selection', models.CharField(max_length=255)),
                ('module_account_budget', models.BooleanField(blank=True, null=True)),
                ('module_account_payment', models.BooleanField(blank=True, null=True)),
                ('module_account_reports', models.BooleanField(blank=True, null=True)),
                ('module_account_check_printing', models.BooleanField(blank=True, null=True)),
                ('module_account_batch_payment', models.BooleanField(blank=True, null=True)),
                ('module_account_sepa', models.BooleanField(blank=True, null=True)),
                ('module_account_sepa_direct_debit', models.BooleanField(blank=True, null=True)),
                ('module_l10n_fr_fec_import', models.BooleanField(blank=True, null=True)),
                ('module_account_bank_statement_import_qif', models.BooleanField(blank=True, null=True)),
                ('module_account_bank_statement_import_ofx', models.BooleanField(blank=True, null=True)),
                ('module_account_bank_statement_import_csv', models.BooleanField(blank=True, null=True)),
                ('module_account_bank_statement_import_camt', models.BooleanField(blank=True, null=True)),
                ('module_currency_rate_live', models.BooleanField(blank=True, null=True)),
                ('module_account_intrastat', models.BooleanField(blank=True, null=True)),
                ('module_product_margin', models.BooleanField(blank=True, null=True)),
                ('module_l10n_eu_oss', models.BooleanField(blank=True, null=True)),
                ('module_account_taxcloud', models.BooleanField(blank=True, null=True)),
                ('module_account_invoice_extract', models.BooleanField(blank=True, null=True)),
                ('module_snailmail_account', models.BooleanField(blank=True, null=True)),
                ('use_invoice_terms', models.BooleanField(blank=True, null=True)),
                ('group_auto_done_setting', models.BooleanField(blank=True, null=True)),
                ('module_sale_margin', models.BooleanField(blank=True, null=True)),
                ('use_quotation_validity_days', models.BooleanField(blank=True, null=True)),
                ('group_warning_sale', models.BooleanField(blank=True, null=True)),
                ('group_sale_delivery_address', models.BooleanField(blank=True, null=True)),
                ('group_proforma_sales', models.BooleanField(blank=True, null=True)),
                ('default_invoice_policy', models.CharField(blank=True, max_length=255, null=True)),
                ('module_delivery', models.BooleanField(blank=True, null=True)),
                ('module_delivery_dhl', models.BooleanField(blank=True, null=True)),
                ('module_delivery_fedex', models.BooleanField(blank=True, null=True)),
                ('module_delivery_ups', models.BooleanField(blank=True, null=True)),
                ('module_delivery_usps', models.BooleanField(blank=True, null=True)),
                ('module_delivery_bpost', models.BooleanField(blank=True, null=True)),
                ('module_delivery_easypost', models.BooleanField(blank=True, null=True)),
                ('module_product_email_template', models.BooleanField(blank=True, null=True)),
                ('module_sale_coupon', models.BooleanField(blank=True, null=True)),
                ('module_sale_amazon', models.BooleanField(blank=True, null=True)),
                ('automatic_invoice', models.BooleanField(blank=True, null=True)),
                ('group_sale_order_template', models.BooleanField(blank=True, null=True)),
                ('module_sale_quotation_builder', models.BooleanField(blank=True, null=True)),
                ('group_use_lead', models.BooleanField(blank=True, null=True)),
                ('group_use_recurring_revenues', models.BooleanField(blank=True, null=True)),
                ('is_membership_multi', models.BooleanField(blank=True, null=True)),
                ('crm_use_auto_assignment', models.BooleanField(blank=True, null=True)),
                ('crm_auto_assignment_action', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_auto_assignment_interval_type', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_auto_assignment_interval_number', models.IntegerField(blank=True, null=True)),
                ('crm_auto_assignment_run_datetime', models.DateTimeField(blank=True, null=True)),
                ('module_crm_iap_mine', models.BooleanField(blank=True, null=True)),
                ('module_crm_iap_enrich', models.BooleanField(blank=True, null=True)),
                ('module_website_crm_iap_reveal', models.BooleanField(blank=True, null=True)),
                ('lead_enrich_auto', models.CharField(blank=True, max_length=255, null=True)),
                ('lead_mining_in_pipeline', models.BooleanField(blank=True, null=True)),
                ('predictive_lead_scoring_start_date_str', models.CharField(blank=True, max_length=255, null=True)),
                ('predictive_lead_scoring_fields_str', models.CharField(blank=True, max_length=255, null=True)),
                ('module_product_expiry', models.BooleanField(blank=True, null=True)),
                ('group_stock_production_lot', models.BooleanField(blank=True, null=True)),
                ('group_lot_on_delivery_slip', models.BooleanField(blank=True, null=True)),
                ('group_stock_tracking_lot', models.BooleanField(blank=True, null=True)),
                ('group_stock_tracking_owner', models.BooleanField(blank=True, null=True)),
                ('group_stock_adv_location', models.BooleanField(blank=True, null=True)),
                ('group_warning_stock', models.BooleanField(blank=True, null=True)),
                ('group_stock_sign_delivery', models.BooleanField(blank=True, null=True)),
                ('module_stock_picking_batch', models.BooleanField(blank=True, null=True)),
                ('group_stock_picking_wave', models.BooleanField(blank=True, null=True)),
                ('module_stock_barcode', models.BooleanField(blank=True, null=True)),
                ('module_stock_sms', models.BooleanField(blank=True, null=True)),
                ('module_quality_control', models.BooleanField(blank=True, null=True)),
                ('module_quality_control_worksheet', models.BooleanField(blank=True, null=True)),
                ('group_stock_multi_locations', models.BooleanField(blank=True, null=True)),
                ('group_stock_storage_categories', models.BooleanField(blank=True, null=True)),
                ('group_stock_reception_report', models.BooleanField(blank=True, null=True)),
                ('group_stock_auto_reception_report', models.BooleanField(blank=True, null=True)),
                ('module_stock_landed_costs', models.BooleanField(blank=True, null=True)),
                ('group_lot_on_invoice', models.BooleanField(blank=True, null=True)),
                ('group_display_incoterm', models.BooleanField(blank=True, null=True)),
                ('use_security_lead', models.BooleanField(blank=True, null=True)),
                ('default_picking_policy', models.CharField(max_length=255)),
                ('module_hr_presence', models.BooleanField(blank=True, null=True)),
                ('module_hr_skills', models.BooleanField(blank=True, null=True)),
                ('hr_presence_control_login', models.BooleanField(blank=True, null=True)),
                ('hr_presence_control_email', models.BooleanField(blank=True, null=True)),
                ('hr_presence_control_ip', models.BooleanField(blank=True, null=True)),
                ('module_hr_attendance', models.BooleanField(blank=True, null=True)),
                ('hr_employee_self_edit', models.BooleanField(blank=True, null=True)),
                ('expense_alias_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('use_mailgateway', models.BooleanField(blank=True, null=True)),
                ('module_hr_payroll_expense', models.BooleanField(blank=True, null=True)),
                ('module_hr_expense_extract', models.BooleanField(blank=True, null=True)),
                ('module_project_forecast', models.BooleanField(blank=True, null=True)),
                ('module_hr_timesheet', models.BooleanField(blank=True, null=True)),
                ('group_subtask_project', models.BooleanField(blank=True, null=True)),
                ('group_project_rating', models.BooleanField(blank=True, null=True)),
                ('group_project_stages', models.BooleanField(blank=True, null=True)),
                ('group_project_recurring_tasks', models.BooleanField(blank=True, null=True)),
                ('group_project_task_dependencies', models.BooleanField(blank=True, null=True)),
                ('geoloc_provider_googlemap_key', models.CharField(blank=True, max_length=255, null=True)),
                ('google_drive_authorization_code', models.CharField(blank=True, max_length=255, null=True)),
                ('is_google_drive_token_generated', models.BooleanField(blank=True, null=True)),
                ('cal_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('cal_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('cal_microsoft_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('cal_microsoft_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('google_custom_search_key', models.CharField(blank=True, max_length=255, null=True)),
                ('google_pse_id', models.CharField(blank=True, max_length=255, null=True)),
                ('recaptcha_public_key', models.CharField(blank=True, max_length=255, null=True)),
                ('recaptcha_private_key', models.CharField(blank=True, max_length=255, null=True)),
                ('recaptcha_min_score', models.FloatField(blank=True, null=True)),
                ('module_project_timesheet_synchro', models.BooleanField(blank=True, null=True)),
                ('module_project_timesheet_holidays', models.BooleanField(blank=True, null=True)),
                ('reminder_user_allow', models.BooleanField(blank=True, null=True)),
                ('reminder_manager_allow', models.BooleanField(blank=True, null=True)),
                ('group_expiry_date_on_delivery_slip', models.BooleanField(blank=True, null=True)),
                ('lock_confirmed_po', models.BooleanField(blank=True, null=True)),
                ('po_order_approval', models.BooleanField(blank=True, null=True)),
                ('default_purchase_method', models.CharField(blank=True, max_length=255, null=True)),
                ('group_warning_purchase', models.BooleanField(blank=True, null=True)),
                ('module_account_3way_match', models.BooleanField(blank=True, null=True)),
                ('module_purchase_requisition', models.BooleanField(blank=True, null=True)),
                ('module_purchase_product_matrix', models.BooleanField(blank=True, null=True)),
                ('use_po_lead', models.BooleanField(blank=True, null=True)),
                ('group_send_reminder', models.BooleanField(blank=True, null=True)),
                ('module_stock_dropshipping', models.BooleanField(blank=True, null=True)),
                ('is_installed_sale', models.BooleanField(blank=True, null=True)),
                ('invoice_policy', models.BooleanField(blank=True, null=True)),
                ('group_attendance_use_pin', models.BooleanField(blank=True, null=True)),
                ('hr_attendance_overtime', models.BooleanField(blank=True, null=True)),
                ('overtime_start_date', models.DateField(blank=True, null=True)),
                ('overtime_company_threshold', models.IntegerField(blank=True, null=True)),
                ('overtime_employee_threshold', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('address_format', models.TextField(blank=True, null=True)),
                ('phone_code', models.IntegerField(blank=True, null=True)),
                ('name_position', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_label', models.CharField(blank=True, max_length=255, null=True)),
                ('state_required', models.BooleanField(blank=True, null=True)),
                ('zip_required', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('symbol', models.CharField(max_length=255)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rounding', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('decimal_places', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_unit_label', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_subunit_label', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.DateField()),
                ('rate', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_currency_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResetViewArchWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_mode', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reset_view_arch_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResLang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('iso_code', models.CharField(blank=True, max_length=255, null=True)),
                ('url_code', models.CharField(max_length=255, unique=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('direction', models.CharField(max_length=255)),
                ('date_format', models.CharField(max_length=255)),
                ('time_format', models.CharField(max_length=255)),
                ('week_start', models.CharField(max_length=255)),
                ('grouping', models.CharField(max_length=255)),
                ('decimal_point', models.CharField(max_length=255)),
                ('thousands_sep', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_lang',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('hours_per_day', models.FloatField(blank=True, null=True)),
                ('tz', models.CharField(max_length=255)),
                ('two_weeks_calendar', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('dayofweek', models.CharField(max_length=255)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('hour_from', models.FloatField()),
                ('hour_to', models.FloatField()),
                ('day_period', models.CharField(max_length=255)),
                ('week_type', models.CharField(blank=True, max_length=255, null=True)),
                ('display_type', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarLeaves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('time_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar_leaves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('resource_type', models.CharField(max_length=255)),
                ('time_efficiency', models.FloatField()),
                ('tz', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('tz', models.CharField(blank=True, max_length=255, null=True)),
                ('vat', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('credit_limit', models.FloatField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('employee', models.BooleanField(blank=True, null=True)),
                ('function', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('partner_longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('is_company', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('partner_share', models.BooleanField(blank=True, null=True)),
                ('commercial_company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('email_normalized', models.CharField(blank=True, max_length=255, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('signup_token', models.CharField(blank=True, max_length=255, null=True)),
                ('signup_type', models.CharField(blank=True, max_length=255, null=True)),
                ('signup_expiration', models.DateTimeField(blank=True, null=True)),
                ('phone_sanitized', models.CharField(blank=True, max_length=255, null=True)),
                ('debit_limit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('last_time_entries_checked', models.DateTimeField(blank=True, null=True)),
                ('invoice_warn', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_warn_msg', models.TextField(blank=True, null=True)),
                ('supplier_rank', models.IntegerField(blank=True, null=True)),
                ('customer_rank', models.IntegerField(blank=True, null=True)),
                ('sale_warn', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_warn_msg', models.TextField(blank=True, null=True)),
                ('calendar_last_notif_ack', models.DateTimeField(blank=True, null=True)),
                ('picking_warn', models.CharField(blank=True, max_length=255, null=True)),
                ('picking_warn_msg', models.TextField(blank=True, null=True)),
                ('date_localization', models.DateField(blank=True, null=True)),
                ('purchase_warn', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_warn_msg', models.TextField(blank=True, null=True)),
                ('x_whatsapp', models.CharField(blank=True, max_length=255, null=True)),
                ('x_source', models.CharField(blank=True, max_length=255, null=True)),
                ('x_status', models.CharField(blank=True, max_length=255, null=True)),
                ('x_user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('x_residential_status', models.CharField(blank=True, max_length=255, null=True)),
                ('x_approved_network_associate', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('acc_number', models.CharField(max_length=255)),
                ('sanitized_acc_number', models.CharField(blank=True, max_length=255, null=True)),
                ('acc_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerIap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iap_search_domain', models.CharField(blank=True, max_length=255, null=True)),
                ('iap_enrich_info', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_iap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_industry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('shortcut', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('login', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('totp_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_type', models.CharField(max_length=255)),
                ('odoobot_state', models.CharField(blank=True, max_length=255, null=True)),
                ('odoobot_failed', models.BooleanField(blank=True, null=True)),
                ('target_sales_won', models.IntegerField(blank=True, null=True)),
                ('target_sales_done', models.IntegerField(blank=True, null=True)),
                ('target_sales_invoiced', models.IntegerField(blank=True, null=True)),
                ('microsoft_calendar_rtoken', models.CharField(blank=True, max_length=255, null=True)),
                ('microsoft_calendar_token', models.CharField(blank=True, max_length=255, null=True)),
                ('microsoft_calendar_token_validity', models.DateTimeField(blank=True, null=True)),
                ('microsoft_calendar_sync_token', models.CharField(blank=True, max_length=255, null=True)),
                ('microsoft_synchronization_stopped', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersApikeys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('scope', models.CharField(blank=True, max_length=255, null=True)),
                ('index', models.CharField(blank=True, max_length=8, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_apikeys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersApikeysDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_apikeys_description',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersIdentitycheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_identitycheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'res_users_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_discuss_sidebar_category_channel_open', models.BooleanField(blank=True, null=True)),
                ('is_discuss_sidebar_category_chat_open', models.BooleanField(blank=True, null=True)),
                ('push_to_talk_key', models.CharField(blank=True, max_length=255, null=True)),
                ('use_push_to_talk', models.BooleanField(blank=True, null=True)),
                ('voice_active_duration', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersSettingsVolumes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_settings_volumes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleAdvancePaymentInv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advance_payment_method', models.CharField(max_length=255)),
                ('deduct_down_payments', models.BooleanField(blank=True, null=True)),
                ('has_down_payments', models.BooleanField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_start_invoice_timesheet', models.DateField(blank=True, null=True)),
                ('date_end_invoice_timesheet', models.DateField(blank=True, null=True)),
                ('invoicing_timesheet_enabled', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_advance_payment_inv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('origin', models.CharField(blank=True, max_length=255, null=True)),
                ('client_order_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('date_order', models.DateTimeField()),
                ('validity_date', models.DateField(blank=True, null=True)),
                ('require_signature', models.BooleanField(blank=True, null=True)),
                ('require_payment', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('currency_rate', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('signed_by', models.CharField(blank=True, max_length=255, null=True)),
                ('signed_on', models.DateTimeField(blank=True, null=True)),
                ('commitment_date', models.DateTimeField(blank=True, null=True)),
                ('show_update_pricelist', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('picking_policy', models.CharField(max_length=255)),
                ('effective_date', models.DateTimeField(blank=True, null=True)),
                ('margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('margin_percent', models.FloatField(blank=True, null=True)),
                ('report_grids', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=255, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_tax', models.FloatField(blank=True, null=True)),
                ('price_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_reduce', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_reduce_taxinc', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_reduce_taxexcl', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_delivered_method', models.CharField(blank=True, max_length=255, null=True)),
                ('qty_delivered', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_delivered_manual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_to_invoice', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_invoiced', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('untaxed_amount_invoiced', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('untaxed_amount_to_invoice', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('is_expense', models.BooleanField(blank=True, null=True)),
                ('is_downpayment', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_lead', models.FloatField()),
                ('display_type', models.CharField(blank=True, max_length=255, null=True)),
                ('product_packaging_qty', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_service', models.BooleanField(blank=True, null=True)),
                ('margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('margin_percent', models.FloatField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('remaining_hours', models.FloatField(blank=True, null=True)),
                ('has_displayed_warning_upsell', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('number_of_days', models.IntegerField(blank=True, null=True)),
                ('require_signature', models.BooleanField(blank=True, null=True)),
                ('require_payment', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTemplateLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField()),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('display_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_template_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTemplateOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_template_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalePaymentAcquirerOnboardingWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_email_account', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_seller_account', models.CharField(blank=True, max_length=255, null=True)),
                ('paypal_pdt_token', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_secret_key', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_publishable_key', models.CharField(blank=True, max_length=255, null=True)),
                ('manual_name', models.CharField(blank=True, max_length=255, null=True)),
                ('journal_name', models.CharField(blank=True, max_length=255, null=True)),
                ('acc_number', models.CharField(blank=True, max_length=255, null=True)),
                ('manual_post_msg', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_payment_acquirer_onboarding_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleProductConfigurator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_product_configurator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=50)),
                ('desc', models.CharField(max_length=300)),
                ('pub_date', models.DateField()),
                ('category', models.CharField(max_length=50)),
                ('image', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('sub_category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'shop_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsComposer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition_mode', models.CharField(max_length=255)),
                ('res_model', models.CharField(blank=True, max_length=255, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('res_ids', models.CharField(blank=True, max_length=255, null=True)),
                ('use_active_domain', models.BooleanField(blank=True, null=True)),
                ('active_domain', models.TextField(blank=True, null=True)),
                ('mass_keep_log', models.BooleanField(blank=True, null=True)),
                ('mass_force_send', models.BooleanField(blank=True, null=True)),
                ('mass_use_blacklist', models.BooleanField(blank=True, null=True)),
                ('recipient_single_number_itf', models.CharField(blank=True, max_length=255, null=True)),
                ('number_field_name', models.CharField(blank=True, max_length=255, null=True)),
                ('numbers', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_composer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsResend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_resend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsResendRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resend', models.BooleanField(blank=True, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_number', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_resend_recipient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsSms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('failure_type', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_sms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model_0', models.CharField(blank=True, db_column='model', max_length=255, null=True)),
                ('body', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsTemplatePreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_template_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailConfirmInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_confirm_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255)),
                ('res_id', models.IntegerField()),
                ('color', models.BooleanField(blank=True, null=True)),
                ('cover', models.BooleanField(blank=True, null=True)),
                ('duplex', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(max_length=255)),
                ('error_code', models.CharField(blank=True, max_length=255, null=True)),
                ('info_msg', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_letter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailLetterCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_letter_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailLetterFormatError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snailmail_cover', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_letter_format_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailLetterMissingRequiredFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('street2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_letter_missing_required_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockAssignSerial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_serial_number', models.CharField(max_length=255)),
                ('next_serial_count', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_assign_serial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockBackorderConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_transfers', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_backorder_confirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockBackorderConfirmationLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_backorder', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_backorder_confirmation_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockChangeProductQty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_change_product_qty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockImmediateTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_transfers', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_immediate_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockImmediateTransferLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_immediate', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_immediate_transfer_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryAdjustmentName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_adjustment_name', models.CharField(blank=True, max_length=255, null=True)),
                ('show_info', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_inventory_adjustment_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_inventory_conflict',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryWarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_inventory_warning',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLandedCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('target_model', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_landed_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLandedCostLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('split_method', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_landed_cost_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('usage', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('posx', models.IntegerField(blank=True, null=True)),
                ('posy', models.IntegerField(blank=True, null=True)),
                ('posz', models.IntegerField(blank=True, null=True)),
                ('parent_path', models.CharField(blank=True, max_length=255, null=True)),
                ('scrap_location', models.BooleanField(blank=True, null=True)),
                ('return_location', models.BooleanField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('cyclic_inventory_frequency', models.IntegerField(blank=True, null=True)),
                ('last_inventory_date', models.DateField(blank=True, null=True)),
                ('next_inventory_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('product_selectable', models.BooleanField(blank=True, null=True)),
                ('product_categ_selectable', models.BooleanField(blank=True, null=True)),
                ('warehouse_selectable', models.BooleanField(blank=True, null=True)),
                ('packaging_selectable', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('sale_selectable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_location_route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('date_deadline', models.DateTimeField(blank=True, null=True)),
                ('description_picking', models.TextField(blank=True, null=True)),
                ('product_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('price_unit', models.FloatField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=255, null=True)),
                ('procure_method', models.CharField(max_length=255)),
                ('scrapped', models.BooleanField(blank=True, null=True)),
                ('propagate_cancel', models.BooleanField(blank=True, null=True)),
                ('delay_alert_date', models.DateTimeField(blank=True, null=True)),
                ('is_inventory', models.BooleanField(blank=True, null=True)),
                ('additional', models.BooleanField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('next_serial', models.CharField(blank=True, max_length=255, null=True)),
                ('next_serial_count', models.IntegerField(blank=True, null=True)),
                ('reservation_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('to_refund', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMoveLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_done', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('lot_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('description_picking', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_move_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockOrderpointSnooze',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predefined_date', models.CharField(blank=True, max_length=255, null=True)),
                ('snoozed_until', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_orderpoint_snooze',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackageDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_package_destination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackageLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_package_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('packaging_length', models.IntegerField(blank=True, null=True)),
                ('max_weight', models.FloatField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_package_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPicking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('move_type', models.CharField(max_length=255)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('date_deadline', models.DateTimeField(blank=True, null=True)),
                ('has_deadline_issue', models.BooleanField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('printed', models.BooleanField(blank=True, null=True)),
                ('is_locked', models.BooleanField(blank=True, null=True)),
                ('immediate_transfer', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_picking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('sequence_code', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('show_entire_packs', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('use_create_lots', models.BooleanField(blank=True, null=True)),
                ('use_existing_lots', models.BooleanField(blank=True, null=True)),
                ('print_label', models.BooleanField(blank=True, null=True)),
                ('show_operations', models.BooleanField(blank=True, null=True)),
                ('show_reserved', models.BooleanField(blank=True, null=True)),
                ('reservation_method', models.CharField(max_length=255)),
                ('reservation_days_before', models.IntegerField(blank=True, null=True)),
                ('reservation_days_before_priority', models.IntegerField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_picking_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockProductionLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('use_date', models.DateTimeField(blank=True, null=True)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
                ('alert_date', models.DateTimeField(blank=True, null=True)),
                ('product_expiry_reminded', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_production_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPutawayRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_putaway_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('reserved_quantity', models.FloatField()),
                ('in_date', models.DateTimeField()),
                ('inventory_quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('inventory_diff_quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('inventory_date', models.DateField(blank=True, null=True)),
                ('inventory_quantity_set', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('accounting_date', models.DateField(blank=True, null=True)),
                ('removal_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_quant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantityHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_datetime', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_quantity_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('package_use', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_quant_package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReplenishmentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_replenishment_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRequestCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_date', models.DateField()),
                ('set_count', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('accounting_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_request_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReturnPicking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_dest_exists', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_return_picking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReturnPickingLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('to_refund', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_return_picking_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('group_propagation_option', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('procure_method', models.CharField(max_length=255)),
                ('route_sequence', models.IntegerField(blank=True, null=True)),
                ('delay', models.IntegerField(blank=True, null=True)),
                ('propagate_cancel', models.BooleanField(blank=True, null=True)),
                ('propagate_carrier', models.BooleanField(blank=True, null=True)),
                ('auto', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRulesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_has_variants', models.BooleanField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_rules_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockSchedulerCompute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_scheduler_compute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockScrap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('origin', models.CharField(blank=True, max_length=255, null=True)),
                ('scrap_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_scrap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockStorageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('allow_new_product', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_storage_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockStorageCategoryCapacity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_storage_category_capacity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockTraceabilityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_traceability_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockTrackConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_track_confirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockTrackLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_track_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockValuationAdjustmentLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('former_cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('additional_landed_cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('final_cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_valuation_adjustment_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockValuationLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('remaining_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('remaining_value', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_valuation_layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockValuationLayerRevaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_value', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_valuation_layer_revaluation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('code', models.CharField(max_length=5)),
                ('reception_steps', models.CharField(max_length=255)),
                ('delivery_steps', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('buy_to_resupply', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWarehouseOrderpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('trigger', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('snoozed_until', models.DateField(blank=True, null=True)),
                ('product_min_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('product_max_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_multiple', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_to_order', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_warehouse_orderpoint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWarnInsufficientQtyScrap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('product_uom_name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_warn_insufficient_qty_scrap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxAdjustmentsWizard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('adjustment_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tax_adjustments_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uom_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UomUom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('factor', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('rounding', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('uom_type', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('timesheet_widget', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'uom_uom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_auto_campaign', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_campaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmMedium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_medium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValidateAccountMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('force_post', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'validate_account_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.CharField(blank=True, max_length=255, null=True)),
                ('integer', models.IntegerField(blank=True, null=True)),
                ('float', models.FloatField(blank=True, null=True)),
                ('numeric', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('binary', models.BinaryField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('selection_str', models.CharField(blank=True, max_length=255, null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTestSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebTourTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'web_tour_tour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WizardIrModelMenuCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wizard_ir_model_menu_create',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountAccountJournalRel',
            fields=[
                ('account_account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccount')),
            ],
            options={
                'db_table': 'account_account_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountAccountTag',
            fields=[
                ('account_account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccount')),
            ],
            options={
                'db_table': 'account_account_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTagAccountMoveLineRel',
            fields=[
                ('account_move_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmoveline')),
            ],
            options={
                'db_table': 'account_account_tag_account_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTagAccountTaxRepartitionLineRel',
            fields=[
                ('account_tax_repartition_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttaxrepartitionline')),
            ],
            options={
                'db_table': 'account_account_tag_account_tax_repartition_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTagProductTemplateRel',
            fields=[
                ('product_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.producttemplate')),
            ],
            options={
                'db_table': 'account_account_tag_product_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTaxDefaultRel',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccount')),
            ],
            options={
                'db_table': 'account_account_tax_default_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplateAccountTag',
            fields=[
                ('account_account_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccounttemplate')),
            ],
            options={
                'db_table': 'account_account_template_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplateTaxRel',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccounttemplate')),
            ],
            options={
                'db_table': 'account_account_template_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticDefaultAccountAnalyticTagRel',
            fields=[
                ('account_analytic_default', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountanalyticdefault')),
            ],
            options={
                'db_table': 'account_analytic_default_account_analytic_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticLineTagRel',
            fields=[
                ('line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountanalyticline')),
            ],
            options={
                'db_table': 'account_analytic_line_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTagAccountMoveLineRel',
            fields=[
                ('account_move_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmoveline')),
            ],
            options={
                'db_table': 'account_analytic_tag_account_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTagHrExpenseRel',
            fields=[
                ('hr_expense', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrexpense')),
            ],
            options={
                'db_table': 'account_analytic_tag_hr_expense_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTagProjectTaskRel',
            fields=[
                ('account_analytic_tag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountanalytictag')),
            ],
            options={
                'db_table': 'account_analytic_tag_project_task_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTagPurchaseOrderLineRel',
            fields=[
                ('purchase_order_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.purchaseorderline')),
            ],
            options={
                'db_table': 'account_analytic_tag_purchase_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTagSaleOrderLineRel',
            fields=[
                ('sale_order_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleorderline')),
            ],
            options={
                'db_table': 'account_analytic_tag_sale_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAutomaticEntryWizardAccountMoveLineRel',
            fields=[
                ('account_automatic_entry_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountautomaticentrywizard')),
            ],
            options={
                'db_table': 'account_automatic_entry_wizard_account_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonJournalReportAccountJournalRel',
            fields=[
                ('account_common_journal_report', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountcommonjournalreport')),
            ],
            options={
                'db_table': 'account_common_journal_report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonReportAccountJournalRel',
            fields=[
                ('account_common_report', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountcommonreport')),
            ],
            options={
                'db_table': 'account_common_report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEdiFormatAccountJournalRel',
            fields=[
                ('account_journal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountjournal')),
            ],
            options={
                'db_table': 'account_edi_format_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionResCountryStateRel',
            fields=[
                ('account_fiscal_position', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountfiscalposition')),
            ],
            options={
                'db_table': 'account_fiscal_position_res_country_state_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTemplateResCountryStateRel',
            fields=[
                ('account_fiscal_position_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountfiscalpositiontemplate')),
            ],
            options={
                'db_table': 'account_fiscal_position_template_res_country_state_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceTransactionRel',
            fields=[
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmove')),
            ],
            options={
                'db_table': 'account_invoice_transaction_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalAccountJournalGroupRel',
            fields=[
                ('account_journal_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountjournalgroup')),
            ],
            options={
                'db_table': 'account_journal_account_journal_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalAccountPrintJournalRel',
            fields=[
                ('account_print_journal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountprintjournal')),
            ],
            options={
                'db_table': 'account_journal_account_print_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalAccountReconcileModelRel',
            fields=[
                ('account_reconcile_model', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodel')),
            ],
            options={
                'db_table': 'account_journal_account_reconcile_model_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalAccountReconcileModelTemplateRel',
            fields=[
                ('account_reconcile_model_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodeltemplate')),
            ],
            options={
                'db_table': 'account_journal_account_reconcile_model_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveAccountInvoiceSendRel',
            fields=[
                ('account_invoice_send', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountinvoicesend')),
            ],
            options={
                'db_table': 'account_move_account_invoice_send_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveAccountResequenceWizardRel',
            fields=[
                ('account_resequence_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountresequencewizard')),
            ],
            options={
                'db_table': 'account_move_account_resequence_wizard_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLineAccountTaxRel',
            fields=[
                ('account_move_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmoveline')),
            ],
            options={
                'db_table': 'account_move_line_account_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMovePurchaseOrderRel',
            fields=[
                ('purchase_order', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.purchaseorder')),
            ],
            options={
                'db_table': 'account_move_purchase_order_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveReversalMove',
            fields=[
                ('reversal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmovereversal')),
            ],
            options={
                'db_table': 'account_move_reversal_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveReversalNewMove',
            fields=[
                ('reversal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmovereversal')),
            ],
            options={
                'db_table': 'account_move_reversal_new_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentAccountBankStatementLineRel',
            fields=[
                ('account_bank_statement_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountbankstatementline')),
            ],
            options={
                'db_table': 'account_payment_account_bank_statement_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentRegisterMoveLineRel',
            fields=[
                ('wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountpaymentregister')),
            ],
            options={
                'db_table': 'account_payment_register_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelAnalyticTagRel',
            fields=[
                ('account_reconcile_model_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodelline')),
            ],
            options={
                'db_table': 'account_reconcile_model_analytic_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelLineAccountTaxRel',
            fields=[
                ('account_reconcile_model_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodelline')),
            ],
            options={
                'db_table': 'account_reconcile_model_line_account_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelLineTemplateAccountTaxTemplateRel',
            fields=[
                ('account_reconcile_model_line_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodellinetemplate')),
            ],
            options={
                'db_table': 'account_reconcile_model_line_template_account_tax_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelResPartnerCategoryRel',
            fields=[
                ('account_reconcile_model', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodel')),
            ],
            options={
                'db_table': 'account_reconcile_model_res_partner_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelResPartnerRel',
            fields=[
                ('account_reconcile_model', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodel')),
            ],
            options={
                'db_table': 'account_reconcile_model_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelTemplateResPartnerCategoryRel',
            fields=[
                ('account_reconcile_model_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodeltemplate')),
            ],
            options={
                'db_table': 'account_reconcile_model_template_res_partner_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReconcileModelTemplateResPartnerRel',
            fields=[
                ('account_reconcile_model_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountreconcilemodeltemplate')),
            ],
            options={
                'db_table': 'account_reconcile_model_template_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxFiliationRel',
            fields=[
                ('parent_tax', models.OneToOneField(db_column='parent_tax', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttax')),
            ],
            options={
                'db_table': 'account_tax_filiation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxPurchaseOrderLineRel',
            fields=[
                ('purchase_order_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.purchaseorderline')),
            ],
            options={
                'db_table': 'account_tax_purchase_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxRepartitionFinancialTags',
            fields=[
                ('account_tax_repartition_line_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttaxrepartitionlinetemplate')),
            ],
            options={
                'db_table': 'account_tax_repartition_financial_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxRepartitionMinusReportLine',
            fields=[
                ('account_tax_repartition_line_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttaxrepartitionlinetemplate')),
            ],
            options={
                'db_table': 'account_tax_repartition_minus_report_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxRepartitionPlusReportLine',
            fields=[
                ('account_tax_repartition_line_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttaxrepartitionlinetemplate')),
            ],
            options={
                'db_table': 'account_tax_repartition_plus_report_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxReportLineTagsRel',
            fields=[
                ('account_account_tag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountaccounttag')),
            ],
            options={
                'db_table': 'account_tax_report_line_tags_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxSaleAdvancePaymentInvRel',
            fields=[
                ('sale_advance_payment_inv', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleadvancepaymentinv')),
            ],
            options={
                'db_table': 'account_tax_sale_advance_payment_inv_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxSaleOrderLineRel',
            fields=[
                ('sale_order_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleorderline')),
            ],
            options={
                'db_table': 'account_tax_sale_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxTemplateFiliationRel',
            fields=[
                ('parent_tax', models.OneToOneField(db_column='parent_tax', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttaxtemplate')),
            ],
            options={
                'db_table': 'account_tax_template_filiation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTourUploadBillIrAttachmentsRel',
            fields=[
                ('account_tour_upload_bill', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accounttouruploadbill')),
            ],
            options={
                'db_table': 'account_tour_upload_bill_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseAutomationIrModelFieldsRel',
            fields=[
                ('base_automation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.baseautomation')),
            ],
            options={
                'db_table': 'base_automation_ir_model_fields_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseAutomationOnchangeFieldsRel',
            fields=[
                ('base_automation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.baseautomation')),
            ],
            options={
                'db_table': 'base_automation_onchange_fields_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizardResPartnerRel',
            fields=[
                ('base_partner_merge_automatic_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.basepartnermergeautomaticwizard')),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarmCalendarEventRel',
            fields=[
                ('calendar_event', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.calendarevent')),
            ],
            options={
                'db_table': 'calendar_alarm_calendar_event_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventResPartnerRel',
            fields=[
                ('res_partner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.respartner')),
            ],
            options={
                'db_table': 'calendar_event_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmConvertLeadMassLeadRel',
            fields=[
                ('crm_lead2opportunity_partner_mass', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead2opportunitypartnermass')),
            ],
            options={
                'db_table': 'crm_convert_lead_mass_lead_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMassResUsersRel',
            fields=[
                ('crm_lead2opportunity_partner_mass', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead2opportunitypartnermass')),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerMassRel',
            fields=[
                ('crm_lead2opportunity_partner_mass', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead2opportunitypartnermass')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_mass_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerRel',
            fields=[
                ('crm_lead2opportunity_partner', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead2opportunitypartner')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadPlsUpdateCrmLeadScoringFrequencyFieldRel',
            fields=[
                ('crm_lead_pls_update', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmleadplsupdate')),
            ],
            options={
                'db_table': 'crm_lead_pls_update_crm_lead_scoring_frequency_field_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadProjectSalesCallLogsRel',
            fields=[
                ('crm_lead', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead')),
            ],
            options={
                'db_table': 'crm_lead_project_sales_call_logs_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTagRel',
            fields=[
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmlead')),
            ],
            options={
                'db_table': 'crm_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestDigestResUsersRel',
            fields=[
                ('digest_digest', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.digestdigest')),
            ],
            options={
                'db_table': 'digest_digest_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestTipResUsersRel',
            fields=[
                ('digest_tip', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.digesttip')),
            ],
            options={
                'db_table': 'digest_tip_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplateAttachmentRel',
            fields=[
                ('email_template', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailtemplate')),
            ],
            options={
                'db_table': 'email_template_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeCategoryRel',
            fields=[
                ('emp', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hremployee')),
            ],
            options={
                'db_table': 'employee_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpenseTax',
            fields=[
                ('expense', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrexpense')),
            ],
            options={
                'db_table': 'expense_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpiryPickingConfirmationStockPickingRel',
            fields=[
                ('expiry_picking_confirmation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.expirypickingconfirmation')),
            ],
            options={
                'db_table': 'expiry_picking_confirmation_stock_picking_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpiryPickingConfirmationStockProductionLotRel',
            fields=[
                ('expiry_picking_confirmation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.expirypickingconfirmation')),
            ],
            options={
                'db_table': 'expiry_picking_confirmation_stock_production_lot_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartmentMailChannelRel',
            fields=[
                ('mail_channel', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailchannel')),
            ],
            options={
                'db_table': 'hr_department_mail_channel_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployeeHrLeaveAllocationRel',
            fields=[
                ('hr_leave_allocation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrleaveallocation')),
            ],
            options={
                'db_table': 'hr_employee_hr_leave_allocation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployeeHrLeaveRel',
            fields=[
                ('hr_leave', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrleave')),
            ],
            options={
                'db_table': 'hr_employee_hr_leave_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseApproveDuplicateHrExpenseSheetRel',
            fields=[
                ('hr_expense_approve_duplicate', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrexpenseapproveduplicate')),
            ],
            options={
                'db_table': 'hr_expense_approve_duplicate_hr_expense_sheet_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseHrExpenseApproveDuplicateRel',
            fields=[
                ('hr_expense_approve_duplicate', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrexpenseapproveduplicate')),
            ],
            options={
                'db_table': 'hr_expense_hr_expense_approve_duplicate_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrExpenseHrExpenseRefuseWizardRel',
            fields=[
                ('hr_expense_refuse_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrexpenserefusewizard')),
            ],
            options={
                'db_table': 'hr_expense_hr_expense_refuse_wizard_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrPlanHrPlanActivityTypeRel',
            fields=[
                ('hr_plan', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrplan')),
            ],
            options={
                'db_table': 'hr_plan_hr_plan_activity_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IapAccountResCompanyRel',
            fields=[
                ('iap_account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iapaccount')),
            ],
            options={
                'db_table': 'iap_account_res_company_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServerGroupRel',
            fields=[
                ('act', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iractserver')),
            ],
            options={
                'db_table': 'ir_act_server_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServerResPartnerRel',
            fields=[
                ('ir_act_server', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iractserver')),
            ],
            options={
                'db_table': 'ir_act_server_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowGroupRel',
            fields=[
                ('act', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iractwindow')),
            ],
            options={
                'db_table': 'ir_act_window_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFieldsGroupRel',
            fields=[
                ('field', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.irmodelfields')),
            ],
            options={
                'db_table': 'ir_model_fields_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenuGroupRel',
            fields=[
                ('menu', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iruimenu')),
            ],
            options={
                'db_table': 'ir_ui_menu_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewGroupRel',
            fields=[
                ('view', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iruiview')),
            ],
            options={
                'db_table': 'ir_ui_view_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalAccountControlRel',
            fields=[
                ('journal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountjournal')),
            ],
            options={
                'db_table': 'journal_account_control_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalAccountTypeControlRel',
            fields=[
                ('journal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountjournal')),
            ],
            options={
                'db_table': 'journal_account_type_control_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityRel',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailactivitytype')),
            ],
            options={
                'db_table': 'mail_activity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityTypeMailTemplateRel',
            fields=[
                ('mail_activity_type', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailactivitytype')),
            ],
            options={
                'db_table': 'mail_activity_type_mail_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelResGroupsRel',
            fields=[
                ('mail_channel', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailchannel')),
            ],
            options={
                'db_table': 'mail_channel_res_groups_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageIrAttachmentsRel',
            fields=[
                ('wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailcomposemessage')),
            ],
            options={
                'db_table': 'mail_compose_message_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageResPartnerRel',
            fields=[
                ('wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailcomposemessage')),
            ],
            options={
                'db_table': 'mail_compose_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowersMailMessageSubtypeRel',
            fields=[
                ('mail_followers', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailfollowers')),
            ],
            options={
                'db_table': 'mail_followers_mail_message_subtype_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMailResPartnerRel',
            fields=[
                ('mail_mail', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailmail')),
            ],
            options={
                'db_table': 'mail_mail_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerRel',
            fields=[
                ('mail_message', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailmessage')),
            ],
            options={
                'db_table': 'mail_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerStarredRel',
            fields=[
                ('mail_message', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailmessage')),
            ],
            options={
                'db_table': 'mail_message_res_partner_starred_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailNotificationMailResendMessageRel',
            fields=[
                ('mail_resend_message', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailresendmessage')),
            ],
            options={
                'db_table': 'mail_notification_mail_resend_message_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInviteResPartnerRel',
            fields=[
                ('mail_wizard_invite', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailwizardinvite')),
            ],
            options={
                'db_table': 'mail_wizard_invite_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingCategoryRel',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.calendarevent')),
            ],
            options={
                'db_table': 'meeting_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MergeOpportunityRel',
            fields=[
                ('merge', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmmergeopportunity')),
            ],
            options={
                'db_table': 'merge_opportunity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAttachmentRel',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.mailmessage')),
            ],
            options={
                'db_table': 'message_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteStageRel',
            fields=[
                ('note', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.notenote')),
            ],
            options={
                'db_table': 'note_stage_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteTagsRel',
            fields=[
                ('note', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.notenote')),
            ],
            options={
                'db_table': 'note_tags_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAcquirerPaymentIconRel',
            fields=[
                ('payment_acquirer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.paymentacquirer')),
            ],
            options={
                'db_table': 'payment_acquirer_payment_icon_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentCountryRel',
            fields=[
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.paymentacquirer')),
            ],
            options={
                'db_table': 'payment_country_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalShareResPartnerRel',
            fields=[
                ('portal_share', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.portalshare')),
            ],
            options={
                'db_table': 'portal_share_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizardResPartnerRel',
            fields=[
                ('portal_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.portalwizard')),
            ],
            options={
                'db_table': 'portal_wizard_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttrExclusionValueIdsRel',
            fields=[
                ('product_template_attribute_exclusion', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.producttemplateattributeexclusion')),
            ],
            options={
                'db_table': 'product_attr_exclusion_value_ids_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeProductTemplateRel',
            fields=[
                ('product_attribute', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productattribute')),
            ],
            options={
                'db_table': 'product_attribute_product_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValueProductTemplateAttributeLineRel',
            fields=[
                ('product_attribute_value', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productattributevalue')),
            ],
            options={
                'db_table': 'product_attribute_value_product_template_attribute_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductConfiguratorCustomAttributeValueRel',
            fields=[
                ('sale_product_configurator', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleproductconfigurator')),
            ],
            options={
                'db_table': 'product_configurator_custom_attribute_value_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductConfiguratorNoVariantAttributeValueRel',
            fields=[
                ('sale_product_configurator', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleproductconfigurator')),
            ],
            options={
                'db_table': 'product_configurator_no_variant_attribute_value_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductConfiguratorTemplateAttributeValueRel',
            fields=[
                ('sale_product_configurator', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleproductconfigurator')),
            ],
            options={
                'db_table': 'product_configurator_template_attribute_value_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductFetchImageWizardProductProductRel',
            fields=[
                ('product_fetch_image_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productfetchimagewizard')),
            ],
            options={
                'db_table': 'product_fetch_image_wizard_product_product_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLabelLayoutProductProductRel',
            fields=[
                ('product_label_layout', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productlabellayout')),
            ],
            options={
                'db_table': 'product_label_layout_product_product_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLabelLayoutProductTemplateRel',
            fields=[
                ('product_label_layout', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productlabellayout')),
            ],
            options={
                'db_table': 'product_label_layout_product_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLabelLayoutStockMoveLineRel',
            fields=[
                ('product_label_layout', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productlabellayout')),
            ],
            options={
                'db_table': 'product_label_layout_stock_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductOptionalRel',
            fields=[
                ('src', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.producttemplate')),
            ],
            options={
                'db_table': 'product_optional_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductProductStockTrackConfirmationRel',
            fields=[
                ('stock_track_confirmation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocktrackconfirmation')),
            ],
            options={
                'db_table': 'product_product_stock_track_confirmation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReplenishStockLocationRouteRel',
            fields=[
                ('product_replenish', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productreplenish')),
            ],
            options={
                'db_table': 'product_replenish_stock_location_route_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSupplierinfoStockReplenishmentInfoRel',
            fields=[
                ('stock_replenishment_info', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockreplenishmentinfo')),
            ],
            options={
                'db_table': 'product_supplierinfo_stock_replenishment_info_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSupplierTaxesRel',
            fields=[
                ('prod', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.producttemplate')),
            ],
            options={
                'db_table': 'product_supplier_taxes_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTaxesRel',
            fields=[
                ('prod', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.producttemplate')),
            ],
            options={
                'db_table': 'product_taxes_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplateAttributeValueSaleOrderLineRel',
            fields=[
                ('sale_order_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleorderline')),
            ],
            options={
                'db_table': 'product_template_attribute_value_sale_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductVariantCombination',
            fields=[
                ('product_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productproduct')),
            ],
            options={
                'db_table': 'product_variant_combination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectDeleteWizardProjectProjectRel',
            fields=[
                ('project_delete_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projectdeletewizard')),
            ],
            options={
                'db_table': 'project_delete_wizard_project_project_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectFavoriteUserRel',
            fields=[
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projectproject')),
            ],
            options={
                'db_table': 'project_favorite_user_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProjectProjectTagsRel',
            fields=[
                ('project_project', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projectproject')),
            ],
            options={
                'db_table': 'project_project_project_tags_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProjectProjectTaskTypeDeleteWizardRel',
            fields=[
                ('project_task_type_delete_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projecttasktypedeletewizard')),
            ],
            options={
                'db_table': 'project_project_project_task_type_delete_wizard_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectShareWizardResPartnerRel',
            fields=[
                ('project_share_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projectsharewizard')),
            ],
            options={
                'db_table': 'project_share_wizard_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTagsProjectTaskRel',
            fields=[
                ('project_task', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projecttask')),
            ],
            options={
                'db_table': 'project_tags_project_task_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskTypeProjectTaskTypeDeleteWizardRel',
            fields=[
                ('project_task_type_delete_wizard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projecttasktypedeletewizard')),
            ],
            options={
                'db_table': 'project_task_type_project_task_type_delete_wizard_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskTypeRel',
            fields=[
                ('type', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projecttasktype')),
            ],
            options={
                'db_table': 'project_task_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderStockPickingRel',
            fields=[
                ('purchase_order', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.purchaseorder')),
            ],
            options={
                'db_table': 'purchase_order_stock_picking_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelModulesLangexport',
            fields=[
                ('wiz', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.baselanguageexport')),
            ],
            options={
                'db_table': 'rel_modules_langexport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelServerActions',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iractserver')),
            ],
            options={
                'db_table': 'rel_server_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompanyUsersRel',
            fields=[
                ('cid', models.OneToOneField(db_column='cid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.rescompany')),
            ],
            options={
                'db_table': 'res_company_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryGroupPricelistRel',
            fields=[
                ('pricelist', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.productpricelist')),
            ],
            options={
                'db_table': 'res_country_group_pricelist_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryResCountryGroupRel',
            fields=[
                ('res_country', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.rescountry')),
            ],
            options={
                'db_table': 'res_country_res_country_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsImpliedRel',
            fields=[
                ('gid', models.OneToOneField(db_column='gid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.resgroups')),
            ],
            options={
                'db_table': 'res_groups_implied_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsReportRel',
            fields=[
                ('uid', models.OneToOneField(db_column='uid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.iractreportxml')),
            ],
            options={
                'db_table': 'res_groups_report_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsUsersRel',
            fields=[
                ('gid', models.OneToOneField(db_column='gid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.resgroups')),
            ],
            options={
                'db_table': 'res_groups_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerResPartnerCategoryRel',
            fields=[
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.respartnercategory')),
            ],
            options={
                'db_table': 'res_partner_res_partner_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RuleGroupRel',
            fields=[
                ('rule_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.irrule')),
            ],
            options={
                'db_table': 'rule_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderLineInvoiceRel',
            fields=[
                ('invoice_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.accountmoveline')),
            ],
            options={
                'db_table': 'sale_order_line_invoice_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTagRel',
            fields=[
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.saleorder')),
            ],
            options={
                'db_table': 'sale_order_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTransactionRel',
            fields=[
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.paymenttransaction')),
            ],
            options={
                'db_table': 'sale_order_transaction_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockConflictQuantRel',
            fields=[
                ('stock_inventory_conflict', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockinventoryconflict')),
            ],
            options={
                'db_table': 'stock_conflict_quant_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryAdjustmentNameStockQuantRel',
            fields=[
                ('stock_inventory_adjustment_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockinventoryadjustmentname')),
            ],
            options={
                'db_table': 'stock_inventory_adjustment_name_stock_quant_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryConflictStockQuantRel',
            fields=[
                ('stock_inventory_conflict', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockinventoryconflict')),
            ],
            options={
                'db_table': 'stock_inventory_conflict_stock_quant_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryWarningStockQuantRel',
            fields=[
                ('stock_inventory_warning', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockinventorywarning')),
            ],
            options={
                'db_table': 'stock_inventory_warning_stock_quant_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLandedCostStockPickingRel',
            fields=[
                ('stock_landed_cost', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocklandedcost')),
            ],
            options={
                'db_table': 'stock_landed_cost_stock_picking_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteCateg',
            fields=[
                ('route', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocklocationroute')),
            ],
            options={
                'db_table': 'stock_location_route_categ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteMove',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockmove')),
            ],
            options={
                'db_table': 'stock_location_route_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRoutePackaging',
            fields=[
                ('route', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocklocationroute')),
            ],
            options={
                'db_table': 'stock_location_route_packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteStockRulesReportRel',
            fields=[
                ('stock_rules_report', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockrulesreport')),
            ],
            options={
                'db_table': 'stock_location_route_stock_rules_report_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMoveLineConsumeRel',
            fields=[
                ('consume_line', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockmoveline')),
            ],
            options={
                'db_table': 'stock_move_line_consume_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMoveMoveRel',
            fields=[
                ('move_orig', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockmove')),
            ],
            options={
                'db_table': 'stock_move_move_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockOrderpointSnoozeStockWarehouseOrderpointRel',
            fields=[
                ('stock_orderpoint_snooze', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockorderpointsnooze')),
            ],
            options={
                'db_table': 'stock_orderpoint_snooze_stock_warehouse_orderpoint_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackageTypeStockPutawayRuleRel',
            fields=[
                ('stock_putaway_rule', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockputawayrule')),
            ],
            options={
                'db_table': 'stock_package_type_stock_putaway_rule_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingBackorderRel',
            fields=[
                ('stock_backorder_confirmation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockbackorderconfirmation')),
            ],
            options={
                'db_table': 'stock_picking_backorder_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingSmsRel',
            fields=[
                ('confirm_stock_sms', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.confirmstocksms')),
            ],
            options={
                'db_table': 'stock_picking_sms_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingTransferRel',
            fields=[
                ('stock_immediate_transfer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockimmediatetransfer')),
            ],
            options={
                'db_table': 'stock_picking_transfer_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantStockRequestCountRel',
            fields=[
                ('stock_request_count', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockrequestcount')),
            ],
            options={
                'db_table': 'stock_quant_stock_request_count_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantStockTrackConfirmationRel',
            fields=[
                ('stock_track_confirmation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocktrackconfirmation')),
            ],
            options={
                'db_table': 'stock_quant_stock_track_confirmation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRouteProduct',
            fields=[
                ('route', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocklocationroute')),
            ],
            options={
                'db_table': 'stock_route_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRouteWarehouse',
            fields=[
                ('route', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stocklocationroute')),
            ],
            options={
                'db_table': 'stock_route_warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRulesReportStockWarehouseRel',
            fields=[
                ('stock_rules_report', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockrulesreport')),
            ],
            options={
                'db_table': 'stock_rules_report_stock_warehouse_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWhResupplyTable',
            fields=[
                ('supplied_wh', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.stockwarehouse')),
            ],
            options={
                'db_table': 'stock_wh_resupply_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SummaryEmpRel',
            fields=[
                ('sum', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.hrholidayssummaryemployee')),
            ],
            options={
                'db_table': 'summary_emp_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskDependenciesRel',
            fields=[
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.projecttask')),
            ],
            options={
                'db_table': 'task_dependencies_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamFavoriteUserRel',
            fields=[
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.crmteam')),
            ],
            options={
                'db_table': 'team_favorite_user_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmTagRel',
            fields=[
                ('tag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='start.utmcampaign')),
            ],
            options={
                'db_table': 'utm_tag_rel',
                'managed': False,
            },
        ),
    ]
